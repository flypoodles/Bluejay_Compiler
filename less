diff --git a/.idea/editor.xml b/.idea/editor.xml
index 55d1bc1..b0d69ef 100644
--- a/.idea/editor.xml
+++ b/.idea/editor.xml
@@ -2,482 +2,482 @@
 <project version="4">
   <component name="BackendCodeEditorSettings">
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
   </component>
 </project>
\ No newline at end of file
diff --git a/ast.c b/ast.c
index 750c5c4..0015672 100644
--- a/ast.c
+++ b/ast.c
@@ -112,7 +112,15 @@ exp_node* funcExpNode(char * name, list * argsList)
     node->data.func_op.argsList = argsList;
     return node;
 }
-
+exp_node* ternaryNode(exp_node * cond, exp_node * then, exp_node * elseStmt)
+{
+    exp_node * node = malloc(sizeof(exp_node));
+    node ->kind=ter_exp;
+    node->data.ter_op.cond=cond;
+    node->data.ter_op.then=then;
+    node->data.ter_op.elsestmt= elseStmt;
+    return node;
+}
 stmt_node* funcStatementNode(exp_node * func)
 {
     stmt_node* node = malloc(sizeof(stmt_node));
diff --git a/ast.h b/ast.h
index 93cc9c6..6e4f5bd 100644
--- a/ast.h
+++ b/ast.h
@@ -65,7 +65,7 @@ typedef enum { not_op } unop;
 typedef struct exp_node {
     // This is a tagged union
     // TODO add more variants to support all types of expressions
-    enum { int_exp, binop_exp, unop_exp, str_exp,var_exp, void_exp, func_exp} kind;
+    enum { int_exp, binop_exp, unop_exp, str_exp,var_exp, void_exp, func_exp, ter_exp} kind;
     union {
         int ival;
         struct { binop op; struct exp_node* e1; struct exp_node* e2; } bin_ops;
@@ -73,6 +73,7 @@ typedef struct exp_node {
         char * strVal;
         S_symbol varVal;
         struct { char * name; list * argsList; } func_op;
+        struct {struct exp_node*  cond; struct exp_node* then; struct exp_node* elsestmt;} ter_op;
     } data;
 } exp_node;
 
@@ -83,6 +84,8 @@ exp_node* strConstNode(char * val);
 exp_node * voidNode();
 exp_node* varNode(char * val);
 exp_node* funcExpNode(char * name, list * argsList);
+exp_node* ternaryNode(exp_node * cond, exp_node * then, exp_node * elseStmt);
+
 void freeExpNode(exp_node *);
 
 // TODO add more constructor functions, one per variant in the tagged union above
@@ -149,8 +152,6 @@ typedef struct frame {
     S_table indexes;
     ty_node * ret;
     S_table imp_table;
-    char * name;
-
 } frame;
 
 #endif
diff --git a/ast.o b/ast.o
index dbfae25..aeff621 100644
Binary files a/ast.o and b/ast.o differ
diff --git a/ast_to_ir.c b/ast_to_ir.c
index bed3c02..98dcf97 100644
--- a/ast_to_ir.c
+++ b/ast_to_ir.c
@@ -184,6 +184,19 @@ static ir_node * ast_to_ir_expr(exp_node * e, S_table global_types, S_table func
             {
                 return Iconst(0);
             }
+    case ter_exp:
+            {
+                ir_label * ElseLabel =  freshLabel();
+                ir_label * endIfLabel = freshLabel();
+                ir_node * ret = Branch(ElseLabel);
+                ir_node * cond = ast_to_ir_expr(e->data.ter_op.cond,global_types,function_decs,f);
+                ir_node * then =  ast_to_ir_expr(e->data.ter_op.then,global_types,function_decs,f);
+                ir_node * elseStmts = ast_to_ir_expr(e->data.ter_op.elsestmt,global_types,function_decs,f);
+                ret ->tree_ir_1 = cond;
+                ret -> tree_ir_2 = Seq(then, Jump(endIfLabel));
+                ret->tree_ir_3=Seq(Seq(Label(ElseLabel), elseStmts), Label(endIfLabel));
+                return ret;
+            }
         default:
             assert(0); // Dead code
     }
@@ -206,34 +219,11 @@ static ir_node * ast_to_ir_stmt(stmt_node * s, S_table global_types, S_table fun
             ret->tree_ir_3=Seq(Seq(Label(ElseLabel), elseStmts), Label(endIfLabel));
             return ret;
         }
-
         case ret_stmt: {
                 //TODO deal with return within function. On global treat return as exit
                 if(f!=NULL)
                 {
                     ir_node * ret = Return();
-                    fundec_node * funcdec = S_look(function_decs, S_Symbol(f->name));
-                    int index = 0;
-                    list * argList = funcdec->argList;
-                    while(argList!=NULL)
-                    {
-                        argList=argList->next;
-                        index++;
-                    }
-                    printf("index after args: %d\n",index);
-
-                    list * localList = funcdec->localVarList;
-                    while(localList != NULL)
-                    {
-                        //vardec_node * var = (vardec_node*)localList->head;
-                        //printf("var name: %s\n",var->name);
-                        localList= localList->next;
-                        index++;
-                    }
-                   // printf("index : %d\n",index);
-
-
-                    ret->data.iconst=index;
                     ret ->tree_ir_1=ast_to_ir_expr(s->data.ret_exp,global_types,function_decs,f);
                     return ret;
                 }
diff --git a/ast_to_ir.o b/ast_to_ir.o
index c4f7c40..c1dc921 100644
Binary files a/ast_to_ir.o and b/ast_to_ir.o differ
diff --git a/bluejaycc b/bluejaycc
index 6dc196a..77fd704 100755
Binary files a/bluejaycc and b/bluejaycc differ
diff --git a/frames.c b/frames.c
index 4ac0036..9f4242e 100644
--- a/frames.c
+++ b/frames.c
@@ -7,7 +7,6 @@ void framesFunction(fundec_node * fundec, S_table globals, S_table functions_ret
     __attribute__ ((unused))
         frame * f = S_look(frames, S_Symbol(fundec->name));
 
-    f->name=fundec->name;
     long index = 1;
     list * argList = fundec->argList;
     while(argList!=NULL)
@@ -24,7 +23,6 @@ void framesFunction(fundec_node * fundec, S_table globals, S_table functions_ret
     {
         // TODO add each local variable position to indexes
         vardec_node * var = (vardec_node*)localList->head;
-        printf("var name: %s\n",var->name);
         S_enter(f->indexes, S_Symbol(var->name), (void *)index);
         localList= localList->next;
         index++;
@@ -40,7 +38,6 @@ void framesFunction(fundec_node * fundec, S_table globals, S_table functions_ret
         imp_list= imp_list->next;
         index++;
     }
-    printf("index at frame: %ld\n",index);
 
 }
 
diff --git a/frames.o b/frames.o
index 101fe7a..b7e037a 100644
Binary files a/frames.o and b/frames.o differ
diff --git a/lex.yy.c b/lex.yy.c
index 0a9c89e..366192b 100644
--- a/lex.yy.c
+++ b/lex.yy.c
@@ -354,8 +354,8 @@ static void yynoreturn yy_fatal_error ( const char* msg  );
 	(yy_hold_char) = *yy_cp; \
 	*yy_cp = '\0'; \
 	(yy_c_buf_p) = yy_cp;
-#define YY_NUM_RULES 60
-#define YY_END_OF_BUFFER 61
+#define YY_NUM_RULES 62
+#define YY_END_OF_BUFFER 63
 /* This struct is not used in this scanner,
    but its presence is necessary. */
 struct yy_trans_info
@@ -363,32 +363,32 @@ struct yy_trans_info
 	flex_int32_t yy_verify;
 	flex_int32_t yy_nxt;
 	};
-static const flex_int16_t yy_accept[216] =
+static const flex_int16_t yy_accept[218] =
     {   0,
-        0,    1,    0,    0,    0,    0,    0,    0,   61,   59,
-        9,   10,    8,   43,   18,   59,   36,   44,   53,   54,
-       34,   32,   56,   33,   35,   30,   30,   59,    7,   39,
-       59,   41,   58,   46,   58,   58,   58,   58,   58,   58,
-       58,   58,   45,    1,    1,    1,    1,    1,    1,    1,
+        0,    1,    0,    0,    0,    0,    0,    0,   63,   61,
+        9,   10,    8,   45,   18,   61,   38,   46,   55,   56,
+       36,   34,   58,   35,   37,   30,   30,   33,    7,   41,
+       61,   43,   32,   60,   48,   60,   60,   60,   60,   60,
+       60,   60,   60,   47,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,    1,    1,    5,    3,    4,    2,
-       26,   24,   20,   26,   60,    0,   11,   47,   29,   30,
-       31,   31,   55,   40,   38,   37,   42,   58,   58,   58,
+        1,    1,    1,    1,    1,    1,    1,    1,    5,    3,
+        4,    2,   26,   24,   20,   26,   62,    0,   11,   49,
+       29,   30,   31,   31,   57,   42,   40,   39,   44,   60,
 
-       52,   58,   58,   58,   58,   58,   58,   58,   58,   48,
+       60,   60,   54,   60,   60,   60,   60,   60,   60,   60,
+       60,   50,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,    1,   25,   23,   22,   19,   21,
-       27,   58,   14,   58,   15,   58,   58,   58,   58,   12,
-       58,   58,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,   28,   49,   58,   58,   58,   58,
-       58,   16,   58,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,   58,   58,   58,   58,   58,   50,    1,    1,
-        1,    1,    1,    1,   58,   58,   57,    6,   17,    1,
-
-        1,    1,    1,    1,   58,   58,    1,    1,   13,   58,
-        1,    1,   51,    1,    0
+        1,    1,    1,    1,    1,    1,    1,   25,   23,   22,
+       19,   21,   27,   60,   14,   60,   15,   60,   60,   60,
+       60,   12,   60,   60,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,   28,   51,   60,   60,
+       60,   60,   60,   16,   60,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,   60,   60,   60,   60,   60,   52,
+        1,    1,    1,    1,    1,    1,   60,   60,   59,    6,
+
+       17,    1,    1,    1,    1,    1,   60,   60,    1,    1,
+       13,   60,    1,    1,   53,    1,    0
     } ;
 
 static const YY_CHAR yy_ec[256] =
@@ -399,14 +399,14 @@ static const YY_CHAR yy_ec[256] =
         1,    4,    5,    6,    7,    1,    8,    9,    1,   10,
        11,   12,   13,   14,   15,    1,   16,   17,   18,   18,
        18,   18,   18,   18,   18,   19,   19,   20,   21,   22,
-       23,   24,    1,    1,   25,   25,   25,   25,   25,   25,
-       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
-       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
-        1,    1,    1,   27,    1,   28,   29,   26,   30,   31,
-
-       32,   33,   34,   35,   36,   26,   26,   37,   38,   39,
-       40,   41,   26,   42,   43,   44,   45,   46,   47,   48,
-       26,   26,    1,   49,    1,    1,    1,    1,    1,    1,
+       23,   24,   25,    1,   26,   26,   26,   26,   26,   26,
+       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
+       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
+        1,    1,    1,   28,    1,   29,   30,   27,   31,   32,
+
+       33,   34,   35,   36,   37,   27,   27,   38,   39,   40,
+       41,   42,   27,   43,   44,   45,   46,   47,   48,   49,
+       27,   27,    1,   50,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -423,183 +423,183 @@ static const YY_CHAR yy_ec[256] =
         1,    1,    1,    1,    1
     } ;
 
-static const YY_CHAR yy_meta[50] =
+static const YY_CHAR yy_meta[51] =
     {   0,
         1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    3,    3,    3,    1,
-        1,    1,    1,    1,    3,    3,    1,    1,    3,    3,
+        1,    1,    1,    1,    1,    3,    3,    1,    1,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
-        3,    3,    3,    3,    3,    3,    3,    3,    1
+        3,    3,    3,    3,    3,    3,    3,    3,    3,    1
     } ;
 
-static const flex_int16_t yy_base[226] =
+static const flex_int16_t yy_base[228] =
     {   0,
-        0,   49,   97,  100,  102,  103,    0,    0,  423,  424,
-      424,  424,  424,  424,  424,  419,  424,  412,  424,  424,
-      424,  424,  424,  424,  424,   93,   96,  397,  424,   93,
-      396,  395,    0,  424,  380,  371,   85,  371,  382,  369,
-       92,  377,  362,    0,    0,    0,    0,    0,  407,    0,
-      400,    0,    0,    0,    0,    0,    0,    0,  141,  174,
-      385,    0,   96,  384,  383,  222,    0,  368,  359,   89,
-      359,  370,  357,   96,  365,  350,  424,  424,  424,  424,
-      424,  424,  424,  266,  424,  395,  424,  424,  116,  120,
-      424,  176,  424,  424,  424,  424,  424,    0,  354,  357,
-
-        0,  354,  350,  358,   85,  350,  349,  354,  353,  424,
-        0,  385,    0,  339,  256,    0,  179,    0,    0,    0,
-        0,    0,    0,  343,  346,    0,  343,  339,  347,  158,
-      339,  337,  337,  277,    0,  424,  424,  424,  424,  424,
-      188,  277,    0,  271,    0,  275,  274,  258,  266,    0,
-      270,  263,  310,  267,    0,  261,    0,  265,  264,  250,
-      257,    0,  261,  254,  424,    0,  254,  247,  259,  245,
-      247,    0,  253,    0,    0,  248,  241,  253,  239,  241,
-        0,  247,  248,  230,  232,  236,  191,    0,  191,  173,
-      175,  179,  183,    0,  180,  179,    0,    0,    0,  178,
-
-      176,    0,    0,    0,  167,  167,  165,  165,    0,  171,
-        0,  168,    0,    0,  424,  359,  362,  365,  368,  141,
-      137,  371,  374,  377,  104
+        0,   50,   99,  102,  104,  105,    0,    0,  428,  429,
+      429,  429,  429,  429,  429,  424,  429,  417,  429,  429,
+      429,  429,  429,  429,  429,   95,   98,  402,  429,   95,
+      401,  400,  429,    0,  429,  384,  375,   86,  375,  386,
+      373,   91,  381,  366,    0,    0,    0,    0,    0,  412,
+        0,  405,    0,    0,    0,    0,    0,    0,    0,  144,
+      178,  390,    0,   99,  389,  388,    0,  227,    0,  372,
+      363,   90,  363,  374,  361,   97,  369,  354,  429,  429,
+      429,  429,  429,  429,  429,  272,  429,  400,  429,  429,
+      118,  122,  429,  180,  429,  429,  429,  429,  429,    0,
+
+      358,  361,    0,  358,  354,  362,   86,  354,  353,  358,
+      357,  429,    0,  390,    0,  343,  262,    0,  183,    0,
+        0,    0,    0,    0,    0,  347,  350,    0,  347,  342,
+      345,  162,  277,  273,  278,  277,    0,  429,  429,  429,
+      429,  429,  193,  280,    0,  272,    0,  276,  275,  261,
+      269,    0,  273,  266,  317,  270,    0,  264,    0,  267,
+      266,  252,  260,    0,  264,  257,  429,    0,  257,  250,
+      262,  248,  250,    0,  256,    0,    0,  251,  244,  256,
+      242,  244,    0,  250,  251,  233,  185,  186,  190,    0,
+      193,  175,  177,  181,  185,    0,  181,  180,    0,    0,
+
+        0,  179,  178,    0,    0,    0,  169,  169,  163,  161,
+        0,  170,    0,  114,    0,    0,  429,  367,  370,  373,
+      376,  140,  139,  379,  382,  385,  106
     } ;
 
-static const flex_int16_t yy_def[226] =
+static const flex_int16_t yy_def[228] =
     {   0,
-      215,  215,  216,  216,  217,  217,  218,  218,  215,  215,
-      215,  215,  215,  215,  215,  219,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  220,  220,  215,  215,  215,
-      215,  215,  221,  215,  221,  221,  221,  221,  221,  221,
-      221,  221,  215,  222,  222,  222,  222,  222,  223,  222,
-      222,  222,  222,  222,  222,  222,  222,  222,  215,   59,
-      222,  222,  222,  222,  222,  215,  222,   66,   66,   66,
-       66,   66,   66,   66,   66,  222,  215,  215,  215,  215,
-      215,  215,  215,  224,  215,  219,  215,  215,  220,  220,
-      215,  215,  215,  215,  215,  215,  215,  221,  221,  221,
-
-      221,  221,  221,  221,  221,  221,  221,  221,  221,  215,
-      222,  223,  222,   59,   59,  222,  222,  222,  222,  222,
-      222,  222,   66,   66,   66,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,  222,  215,  215,  215,  215,  215,
-      225,  221,  221,  221,  221,  221,  221,  221,  221,  221,
-      221,  221,  215,   66,   66,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,  215,  221,  221,  221,  221,  221,
-      221,  221,  221,  222,   66,   66,   66,   66,   66,   66,
-       66,   66,  221,  221,  221,  221,  221,  221,   66,   66,
-       66,   66,   66,   66,  221,  221,  221,  221,  221,   66,
-
-       66,   66,   66,   66,  221,  221,   66,   66,  221,  221,
-       66,   66,  221,   66,    0,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215
+      217,  217,  218,  218,  219,  219,  220,  220,  217,  217,
+      217,  217,  217,  217,  217,  221,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  222,  222,  217,  217,  217,
+      217,  217,  217,  223,  217,  223,  223,  223,  223,  223,
+      223,  223,  223,  217,  224,  224,  224,  224,  224,  225,
+      224,  224,  224,  224,  224,  224,  224,  224,  224,  217,
+       60,  224,  224,  224,  224,  224,  224,  217,  224,   68,
+       68,   68,   68,   68,   68,   68,   68,  224,  217,  217,
+      217,  217,  217,  217,  217,  226,  217,  221,  217,  217,
+      222,  222,  217,  217,  217,  217,  217,  217,  217,  223,
+
+      223,  223,  223,  223,  223,  223,  223,  223,  223,  223,
+      223,  217,  224,  225,  224,   60,   60,  224,  224,  224,
+      224,  224,  224,  224,   68,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,  224,  217,  217,  217,
+      217,  217,  227,  223,  223,  223,  223,  223,  223,  223,
+      223,  223,  223,  223,  217,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,  217,  223,  223,  223,
+      223,  223,  223,  223,  223,  224,   68,   68,   68,   68,
+       68,   68,   68,   68,  223,  223,  223,  223,  223,  223,
+       68,   68,   68,   68,   68,   68,  223,  223,  223,  223,
+
+      223,   68,   68,   68,   68,   68,  223,  223,   68,   68,
+      223,  223,   68,   68,  223,   68,    0,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217
     } ;
 
-static const flex_int16_t yy_nxt[474] =
+static const flex_int16_t yy_nxt[480] =
     {   0,
        10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
        20,   21,   22,   23,   24,   25,   26,   27,   27,   28,
-       29,   30,   31,   32,   33,   33,   34,   10,   33,   33,
-       33,   35,   36,   33,   33,   37,   33,   33,   33,   38,
-       33,   39,   40,   33,   33,   41,   42,   33,   43,   44,
-       45,   12,   46,   47,   48,   49,   50,   51,   52,   53,
-       54,   55,   56,   57,   58,   59,   60,   60,   61,   62,
-       63,   64,   65,   66,   66,   67,   44,   66,   66,   66,
-       68,   69,   66,   66,   70,   66,   66,   66,   71,   66,
-       72,   73,   66,   66,   74,   75,   66,   76,   78,   79,
-
-       80,   78,   79,   80,   82,   82,  165,   83,   83,   89,
-       89,   90,   90,   90,   90,   94,   95,  101,  119,  120,
-      107,  126,  102,  103,  132,  147,  127,  128,  148,   84,
-       84,  108,   89,   89,   90,  133,   90,   90,   90,   98,
-       92,  111,  111,   91,  111,  111,  111,  111,  111,  111,
-      111,  111,  111,  111,  111,  111,  111,  114,  114,  115,
-      111,  111,  111,  111,  111,  116,  116,  111,  111,  116,
-      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
-      116,  116,  116,  116,  116,  116,  116,  116,  117,  111,
-      115,  115,  141,  141,  141,  153,  153,  153,  159,  214,
-
-      141,  160,  213,  153,  141,  141,  141,  212,  211,  210,
-      209,  208,  141,  207,  206,  205,  204,  203,  202,  201,
-      200,  116,  111,  111,  199,  111,  111,  111,  111,  111,
-      111,  111,  111,  111,  111,  111,  111,  111,  123,  123,
-      123,  111,  111,  111,  111,  111,  123,  123,  111,  111,
-      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
-      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
-      111,  137,  115,  115,  198,  197,  196,  195,  194,  193,
-      192,  191,  190,  189,  188,  187,  186,  185,  184,  183,
-      182,  181,  180,  138,  179,  178,  177,  176,  175,  173,
-
-      172,  171,  170,  116,  139,  169,  168,  167,  166,  140,
-      111,  111,  164,  111,  111,  111,  111,  111,  111,  111,
-      111,  111,  111,  111,  111,  111,  153,  153,  153,  111,
-      111,  111,  111,  111,  153,  174,  111,  111,  174,  174,
-      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
-      174,  174,  174,  174,  174,  174,  174,  174,  111,   77,
-       77,   77,   81,   81,   81,   85,   85,   85,   86,   86,
-       86,  111,  163,  111,  112,  112,  112,  136,  162,  136,
-      161,  158,  157,  156,  155,  154,  116,   87,  152,  151,
-      150,  149,  146,  145,  144,  143,  142,   87,  135,  134,
-
-      131,  130,  129,  125,  124,  122,  121,  118,  113,   87,
-      110,  109,  106,  105,  104,  100,   99,   97,   96,   93,
-       88,   87,  215,    9,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215
+       29,   30,   31,   32,   33,   34,   34,   35,   10,   34,
+       34,   34,   36,   37,   34,   34,   38,   34,   34,   34,
+       39,   34,   40,   41,   34,   34,   42,   43,   34,   44,
+       45,   46,   12,   47,   48,   49,   50,   51,   52,   53,
+       54,   55,   56,   57,   58,   59,   60,   61,   61,   62,
+       63,   64,   65,   66,   67,   68,   68,   69,   45,   68,
+       68,   68,   70,   71,   68,   68,   72,   68,   68,   68,
+       73,   68,   74,   75,   68,   68,   76,   77,   68,   78,
+
+       80,   81,   82,   80,   81,   82,   84,   84,  167,   85,
+       85,   91,   91,   92,   92,   92,   92,   96,   97,  103,
+      109,  121,  122,  128,  104,  105,  134,  149,  129,  130,
+      150,  110,   86,   86,   91,   91,   92,  135,   92,   92,
+       92,  100,   93,   94,  113,  113,  216,  113,  113,  113,
+      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
+      116,  116,  117,  113,  113,  113,  113,  113,  113,  118,
+      118,  113,  113,  118,  118,  118,  118,  118,  118,  118,
+      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
+      118,  118,  119,  113,  117,  117,  143,  143,  143,  155,
+
+      155,  155,  215,  161,  214,  143,  162,  213,  155,  143,
+      143,  143,  212,  211,  210,  209,  208,  207,  143,  206,
+      205,  204,  203,  202,  201,  200,  118,  113,  113,  199,
+      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
+      113,  113,  113,  125,  125,  125,  113,  113,  113,  113,
+      113,  113,  125,  125,  113,  113,  125,  125,  125,  125,
+      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
+      125,  125,  125,  125,  125,  125,  113,  139,  117,  117,
+      198,  197,  196,  195,  194,  193,  192,  191,  190,  189,
+      188,  187,  186,  185,  184,  183,  182,  181,  180,  179,
+
+      140,  178,  177,  175,  174,  173,  172,  171,  170,  169,
+      118,  141,  168,  166,  165,  164,  142,  113,  113,  163,
+      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
+      113,  113,  113,  155,  155,  155,  113,  113,  113,  113,
+      113,  113,  155,  176,  113,  113,  176,  176,  176,  176,
+      176,  176,  176,  176,  176,  176,  176,  176,  176,  176,
+      176,  176,  176,  176,  176,  176,  113,   79,   79,   79,
+       83,   83,   83,   87,   87,   87,   88,   88,   88,  113,
+      160,  113,  114,  114,  114,  138,  159,  138,  158,  157,
+      156,  118,   89,  154,  153,  152,  151,  148,  147,  146,
+
+      145,  144,   89,  137,  136,  133,  132,  131,  127,  126,
+      124,  123,  120,  115,   89,  112,  111,  108,  107,  106,
+      102,  101,   99,   98,   95,   90,   89,  217,    9,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217
     } ;
 
-static const flex_int16_t yy_chk[474] =
+static const flex_int16_t yy_chk[480] =
     {   0,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
         2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
         2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
         2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
-        2,    2,    2,    2,    2,    2,    2,    2,    3,    3,
-
-        3,    4,    4,    4,    5,    6,  225,    5,    6,   26,
-       26,   26,   27,   27,   27,   30,   30,   37,   63,   63,
-       41,   70,   37,   37,   74,  105,   70,   70,  105,    5,
-        6,   41,   89,   89,   89,   74,   90,   90,   90,  221,
-       26,   59,   59,  220,   59,   59,   59,   59,   59,   59,
-       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
-       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
-       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
-       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
-       60,   60,   92,   92,   92,  117,  117,  117,  130,  212,
-
-       92,  130,  210,  117,  141,  141,  141,  208,  207,  206,
-      205,  201,  141,  200,  196,  195,  193,  192,  191,  190,
-      189,   60,   66,   66,  187,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
-       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
-       66,   84,  115,  115,  186,  185,  184,  183,  182,  180,
-      179,  178,  177,  176,  173,  171,  170,  169,  168,  167,
-      164,  163,  161,   84,  160,  159,  158,  156,  154,  152,
-
-      151,  149,  148,  115,   84,  147,  146,  144,  142,   84,
-      153,  153,  134,  153,  153,  153,  153,  153,  153,  153,
-      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
-      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
-      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
-      153,  153,  153,  153,  153,  153,  153,  153,  153,  216,
-      216,  216,  217,  217,  217,  218,  218,  218,  219,  219,
-      219,  222,  133,  222,  223,  223,  223,  224,  132,  224,
-      131,  129,  128,  127,  125,  124,  114,  112,  109,  108,
-      107,  106,  104,  103,  102,  100,   99,   86,   76,   75,
-
-       73,   72,   71,   69,   68,   65,   64,   61,   51,   49,
-       43,   42,   40,   39,   38,   36,   35,   32,   31,   28,
-       18,   16,    9,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
-      215,  215,  215
+        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
+
+        3,    3,    3,    4,    4,    4,    5,    6,  227,    5,
+        6,   26,   26,   26,   27,   27,   27,   30,   30,   38,
+       42,   64,   64,   72,   38,   38,   76,  107,   72,   72,
+      107,   42,    5,    6,   91,   91,   91,   76,   92,   92,
+       92,  223,  222,   26,   60,   60,  214,   60,   60,   60,
+       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
+       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
+       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
+       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
+       60,   60,   60,   60,   61,   61,   94,   94,   94,  119,
+
+      119,  119,  212,  132,  210,   94,  132,  209,  119,  143,
+      143,  143,  208,  207,  203,  202,  198,  197,  143,  195,
+      194,  193,  192,  191,  189,  188,   61,   68,   68,  187,
+       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
+       68,   68,   68,   68,   68,   68,   68,   86,  117,  117,
+      186,  185,  184,  182,  181,  180,  179,  178,  175,  173,
+      172,  171,  170,  169,  166,  165,  163,  162,  161,  160,
+
+       86,  158,  156,  154,  153,  151,  150,  149,  148,  146,
+      117,   86,  144,  136,  135,  134,   86,  155,  155,  133,
+      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
+      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
+      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
+      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
+      155,  155,  155,  155,  155,  155,  155,  218,  218,  218,
+      219,  219,  219,  220,  220,  220,  221,  221,  221,  224,
+      131,  224,  225,  225,  225,  226,  130,  226,  129,  127,
+      126,  116,  114,  111,  110,  109,  108,  106,  105,  104,
+
+      102,  101,   88,   78,   77,   75,   74,   73,   71,   70,
+       66,   65,   62,   52,   50,   44,   43,   41,   40,   39,
+       37,   36,   32,   31,   28,   18,   16,    9,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
+      217,  217,  217,  217,  217,  217,  217,  217,  217
     } ;
 
 static yy_state_type yy_last_accepting_state;
@@ -945,13 +945,13 @@ yy_match:
 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 				{
 				yy_current_state = (int) yy_def[yy_current_state];
-				if ( yy_current_state >= 216 )
+				if ( yy_current_state >= 218 )
 					yy_c = yy_meta[yy_c];
 				}
 			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
 			++yy_cp;
 			}
-		while ( yy_base[yy_current_state] != 424 );
+		while ( yy_base[yy_current_state] != 429 );
 
 yy_find_action:
 		yy_act = yy_accept[yy_current_state];
@@ -1152,149 +1152,159 @@ YY_RULE_SETUP
 case 32:
 YY_RULE_SETUP
 #line 135 "lexer.lex"
-{token(); return PLUS;}
+{token(); return TERNARY;}
 	YY_BREAK
 case 33:
 YY_RULE_SETUP
 #line 136 "lexer.lex"
-{token(); return MINUS;}
+{token(); return COLON;}
 	YY_BREAK
 case 34:
 YY_RULE_SETUP
 #line 137 "lexer.lex"
-{token();return MUL;}
+{token(); return PLUS;}
 	YY_BREAK
 case 35:
 YY_RULE_SETUP
 #line 138 "lexer.lex"
-{token();return DIV;}
+{token(); return MINUS;}
 	YY_BREAK
 case 36:
 YY_RULE_SETUP
 #line 139 "lexer.lex"
-{token();return REM;}
+{token();return MUL;}
 	YY_BREAK
 case 37:
 YY_RULE_SETUP
 #line 140 "lexer.lex"
-{token();return EQ;}
+{token();return DIV;}
 	YY_BREAK
 case 38:
 YY_RULE_SETUP
 #line 141 "lexer.lex"
-{token();return NE;}
+{token();return REM;}
 	YY_BREAK
 case 39:
 YY_RULE_SETUP
 #line 142 "lexer.lex"
-{token();return LT;}
+{token();return EQ;}
 	YY_BREAK
 case 40:
 YY_RULE_SETUP
 #line 143 "lexer.lex"
-{token();return LE;}
+{token();return NE;}
 	YY_BREAK
 case 41:
 YY_RULE_SETUP
 #line 144 "lexer.lex"
-{token();return GT;}
+{token();return LT;}
 	YY_BREAK
 case 42:
 YY_RULE_SETUP
 #line 145 "lexer.lex"
-{token();return GE;}
+{token();return LE;}
 	YY_BREAK
 case 43:
 YY_RULE_SETUP
 #line 146 "lexer.lex"
-{token();return NOT;}
+{token();return GT;}
 	YY_BREAK
 case 44:
 YY_RULE_SETUP
 #line 147 "lexer.lex"
-{token();return BAND;}
+{token();return GE;}
 	YY_BREAK
 case 45:
 YY_RULE_SETUP
 #line 148 "lexer.lex"
-{token();return BOR;}
+{token();return NOT;}
 	YY_BREAK
 case 46:
 YY_RULE_SETUP
 #line 149 "lexer.lex"
-{token();return XOR;}
+{token();return BAND;}
 	YY_BREAK
 case 47:
 YY_RULE_SETUP
 #line 150 "lexer.lex"
-{token();return AND;}
+{token();return BOR;}
 	YY_BREAK
 case 48:
 YY_RULE_SETUP
 #line 151 "lexer.lex"
-{token();return OR;}
+{token();return XOR;}
 	YY_BREAK
 case 49:
 YY_RULE_SETUP
 #line 152 "lexer.lex"
-{token();return ELSE;}
+{token();return AND;}
 	YY_BREAK
 case 50:
 YY_RULE_SETUP
 #line 153 "lexer.lex"
-{token();return WHILE;}
+{token();return OR;}
 	YY_BREAK
 case 51:
 YY_RULE_SETUP
 #line 154 "lexer.lex"
-{token();return OTHERWISE;}
+{token();return ELSE;}
 	YY_BREAK
 case 52:
 YY_RULE_SETUP
 #line 155 "lexer.lex"
-{token();return IF;}
+{token();return WHILE;}
 	YY_BREAK
 case 53:
 YY_RULE_SETUP
 #line 156 "lexer.lex"
-{token();return OPEN_PARENT;}
+{token();return OTHERWISE;}
 	YY_BREAK
 case 54:
 YY_RULE_SETUP
 #line 157 "lexer.lex"
-{token();return CLOSE_PARENT;}
+{token();return IF;}
 	YY_BREAK
 case 55:
 YY_RULE_SETUP
 #line 158 "lexer.lex"
-{token();return ASSIGN;}
+{token();return OPEN_PARENT;}
 	YY_BREAK
 case 56:
 YY_RULE_SETUP
 #line 159 "lexer.lex"
-{return COMMA;}
+{token();return CLOSE_PARENT;}
 	YY_BREAK
 case 57:
 YY_RULE_SETUP
 #line 160 "lexer.lex"
-{token();return REPEAT;}
+{token();return ASSIGN;}
 	YY_BREAK
 case 58:
 YY_RULE_SETUP
 #line 161 "lexer.lex"
-{token();yylval.name=strdup(yytext); return NAME;}
+{return COMMA;}
 	YY_BREAK
 case 59:
 YY_RULE_SETUP
-#line 165 "lexer.lex"
-{ fprintf(stderr,"illegal token at line %d col %d: %s\n", line, col, yytext);exit(73); }
+#line 162 "lexer.lex"
+{token();return REPEAT;}
 	YY_BREAK
 case 60:
 YY_RULE_SETUP
-#line 169 "lexer.lex"
+#line 163 "lexer.lex"
+{token();yylval.name=strdup(yytext); return NAME;}
+	YY_BREAK
+case 61:
+YY_RULE_SETUP
+#line 167 "lexer.lex"
+{ fprintf(stderr,"illegal token at line %d col %d: %s\n", line, col, yytext);exit(73); }
+	YY_BREAK
+case 62:
+YY_RULE_SETUP
+#line 171 "lexer.lex"
 ECHO;
 	YY_BREAK
-#line 1298 "lex.yy.c"
+#line 1308 "lex.yy.c"
 case YY_STATE_EOF(INITIAL):
 case YY_STATE_EOF(BLOCK):
 case YY_STATE_EOF(String):
@@ -1595,7 +1605,7 @@ static int yy_get_next_buffer (void)
 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 			{
 			yy_current_state = (int) yy_def[yy_current_state];
-			if ( yy_current_state >= 216 )
+			if ( yy_current_state >= 218 )
 				yy_c = yy_meta[yy_c];
 			}
 		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
@@ -1623,11 +1633,11 @@ static int yy_get_next_buffer (void)
 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 		{
 		yy_current_state = (int) yy_def[yy_current_state];
-		if ( yy_current_state >= 216 )
+		if ( yy_current_state >= 218 )
 			yy_c = yy_meta[yy_c];
 		}
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
-	yy_is_jam = (yy_current_state == 215);
+	yy_is_jam = (yy_current_state == 217);
 
 		return yy_is_jam ? 0 : yy_current_state;
 }
@@ -2305,6 +2315,6 @@ void yyfree (void * ptr )
 
 #define YYTABLES_NAME "yytables"
 
-#line 169 "lexer.lex"
+#line 171 "lexer.lex"
 
 
diff --git a/lex.yy.o b/lex.yy.o
index de55508..bbee7a0 100644
Binary files a/lex.yy.o and b/lex.yy.o differ
diff --git a/lexer.lex b/lexer.lex
index 708a7b5..8d02c9d 100644
--- a/lexer.lex
+++ b/lexer.lex
@@ -132,6 +132,8 @@ static char * endString() {
 [0-9]+                       {token();yylval.ival=atoi(yytext);return INT;}
 
 [0-9]+[A-Za-z]            {fprintf(stderr,"illegal token at line %d col %d: %s\n", line, col, yytext);exit(73);}
+"?"						{token(); return TERNARY;}
+":"						{token(); return COLON;}
 "+"                     {token(); return PLUS;}
 "-"                     {token(); return MINUS;}
 "*"                     {token();return MUL;}
diff --git a/main.o b/main.o
index 3cacc05..bf9d164 100644
Binary files a/main.o and b/main.o differ
diff --git a/out.mips b/out.mips
index 2e82e11..fc71ef1 100644
--- a/out.mips
+++ b/out.mips
@@ -1,17 +1,7 @@
 .data
-		cs473: .word 0			# Initialize a int variable
-		Str0: .asciiz " "			# STRCONST:RESERVE a space for string constant
 .text
 .globl main
 main:
-		li $v0, 473			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0 
-		sw $zero, ($sp)			# POP: Zero the stack
-		la $v1, cs473			# WRITE: load the variable's address to the register v1
-		sw $v0, ($v1)			# WRITE: write the value popped from top of the stack to the address
 		li $v0, 69420			# ICONST load immediate to a register
 		sw $v0, ($sp)			# ICONST store to the top of the stack
 		addiu $sp, $sp, -4			# ICONST point sp to the next free space
@@ -20,22 +10,11 @@ main:
 		addiu $fp, $sp, 4			# point frame pointer to the begining of the stack frame
 		jal f			# jump to the function label
 		nop			# Ending call: 
-		la $v0, Str0			# STRCONST: load the variable's address to the register v1
-		sw $v0, ($sp)			# STRCONST: store the content of v0 to top of the stack
-		addiu $sp, $sp, -4			# STRCONST: point stack pointer  to the next free space
-		addiu $sp, $sp, 4			# PRINTSTR: Subtract sp 
-		lw $a0, ($sp)			# PRINTSTR: pop the content of the stack to a0
+		addiu $sp, $sp, 4			# PRINTINT: Subtract sp 
+		lw $a0, ($sp)			# PRINTINT: pop the content of the stack to a0
 		sw $zero, ($sp)			# Zero the stack
-		li  $v0, 4			# PRINTSTR load syscall number
-		syscall			# PRINTSTR syscall
-		li $v0, 69420			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		nop			# starting call: 
-		sw $fp, 4($sp)			# PUSH fp on top of the stack
-		addiu $fp, $sp, 4			# point frame pointer to the begining of the stack frame
-		jal f			# jump to the function label
-		nop			# Ending call: 
+		li  $v0, 1			# PRINTINT load syscall number
+		syscall			# PRINTINT syscall
 		li $v0, 0			# ICONST load immediate to a register
 		sw $v0, ($sp)			# ICONST store to the top of the stack
 		addiu $sp, $sp, -4			# ICONST point sp to the next free space
@@ -53,52 +32,8 @@ main:
 		li  $v0, 17			# EXIT load syscall number
 		syscall			# EXIT syscall
 		nop			# starting Function: 
-f2:
-		addiu $sp, $sp, -12			# reserve space for local variables
-		sw $ra, ($sp)			# PUSH return address to the top of the stack
-		addiu $sp, $sp, -4			# PUSH: point stack pointer  to the next free space
-		nop			# Ending Function: 
-		li $v0, 1			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0
-		sw $zero, ($sp)			# Zero the stack
-		sw $v0, -12($fp)			# store the value from v0 to the local var
-		li $v0, 0			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0
-		sw $zero, ($sp)			# Zero the stack
-		sw $v0, -8($fp)			# store the value from v0 to the local var
-		li $v0, 473			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0
-		sw $zero, ($sp)			# Zero the stack
-		sw $v0, -4($fp)			# store the value from v0 to the local var
-		lw $v0, -4($fp)			# load the local argument from the stack frame to register v0
-		sw $v0, ($sp)			#  store v0 to the top of the stack
-		addiu $sp, $sp, -4			#  point stack pointer  to the next free space
-		nop			# starting RETURN: 
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# pop the return value to v0
-		sw $zero, ($sp)			# Zero the stack
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $ra, -16($fp)			# get the return address from fp to ra
-		sw $zero, ($sp)			# Zero the stack
-		move $sp, $fp			# reset sp
-		lw $fp, ($fp)			# reset fp
-		sw $zero, ($sp)			# clean the fp off the stack since fp already stores it
-		sw $v0, ($sp)			#  push the return value  back to the top of the stack
-		addiu $sp, $sp, -4			# PUSH: point stack pointer  to the next free space
-		jr $ra			# jumping back
-		nop			# Ending RETURN: 
-		nop			# starting Function: 
 f:
-		addiu $sp, $sp, -12			# reserve space for local variables
+		addiu $sp, $sp, -8			# reserve space for local variables
 		sw $ra, ($sp)			# PUSH return address to the top of the stack
 		addiu $sp, $sp, -4			# PUSH: point stack pointer  to the next free space
 		nop			# Ending Function: 
@@ -108,29 +43,7 @@ f:
 		addiu $sp, $sp, 4			# POP: Subtract sp 
 		lw $v0, ($sp)			# POP: pop the content of the stack to v0
 		sw $zero, ($sp)			# Zero the stack
-		sw $v0, -12($fp)			# store the value from v0 to the local var
-		li $v0, 0			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0
-		sw $zero, ($sp)			# Zero the stack
 		sw $v0, -8($fp)			# store the value from v0 to the local var
-		li $v0, 473			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $v0, ($sp)			# POP: pop the content of the stack to v0
-		sw $zero, ($sp)			# Zero the stack
-		sw $v0, -4($fp)			# store the value from v0 to the local var
-		lw $v0, -4($fp)			# load the local argument from the stack frame to register v0
-		sw $v0, ($sp)			#  store v0 to the top of the stack
-		addiu $sp, $sp, -4			#  point stack pointer  to the next free space
-		addiu $sp, $sp, 4			# PRINTINT: Subtract sp 
-		lw $a0, ($sp)			# PRINTINT: pop the content of the stack to a0
-		sw $zero, ($sp)			# Zero the stack
-		li  $v0, 1			# PRINTINT load syscall number
-		syscall			# PRINTINT syscall
 		li $v0, 0			# ICONST load immediate to a register
 		sw $v0, ($sp)			# ICONST store to the top of the stack
 		addiu $sp, $sp, -4			# ICONST point sp to the next free space
@@ -138,28 +51,7 @@ f:
 		lw $v0, ($sp)			# POP: pop the content of the stack to v0
 		sw $zero, ($sp)			# Zero the stack
 		sw $v0, -4($fp)			# store the value from v0 to the local var
-		lw $v0, -4($fp)			# load the local argument from the stack frame to register v0
-		sw $v0, ($sp)			#  store v0 to the top of the stack
-		addiu $sp, $sp, -4			#  point stack pointer  to the next free space
-		addiu $sp, $sp, 4			# PRINTINT: Subtract sp 
-		lw $a0, ($sp)			# PRINTINT: pop the content of the stack to a0
-		sw $zero, ($sp)			# Zero the stack
-		li  $v0, 1			# PRINTINT load syscall number
-		syscall			# PRINTINT syscall
-		li $v0, 69420			# ICONST load immediate to a register
-		sw $v0, ($sp)			# ICONST store to the top of the stack
-		addiu $sp, $sp, -4			# ICONST point sp to the next free space
-		nop			# starting call: 
-		sw $fp, 4($sp)			# PUSH fp on top of the stack
-		addiu $fp, $sp, 4			# point frame pointer to the begining of the stack frame
-		jal f2			# jump to the function label
-		nop			# Ending call: 
-		addiu $sp, $sp, 4			# PRINTINT: Subtract sp 
-		lw $a0, ($sp)			# PRINTINT: pop the content of the stack to a0
-		sw $zero, ($sp)			# Zero the stack
-		li  $v0, 1			# PRINTINT load syscall number
-		syscall			# PRINTINT syscall
-		li $v0, 0			# ICONST load immediate to a register
+		li $v0, 1			# ICONST load immediate to a register
 		sw $v0, ($sp)			# ICONST store to the top of the stack
 		addiu $sp, $sp, -4			# ICONST point sp to the next free space
 		nop			# starting RETURN: 
@@ -167,7 +59,7 @@ f:
 		lw $v0, ($sp)			# pop the return value to v0
 		sw $zero, ($sp)			# Zero the stack
 		addiu $sp, $sp, 4			# POP: Subtract sp 
-		lw $ra, -16($fp)			# get the return address from fp to ra
+		lw $ra, -4($fp)			# get the return address from fp to ra
 		sw $zero, ($sp)			# Zero the stack
 		move $sp, $fp			# reset sp
 		lw $fp, ($fp)			# reset fp
diff --git a/parser.y b/parser.y
index e5eded9..6c5f147 100644
--- a/parser.y
+++ b/parser.y
@@ -64,7 +64,8 @@ extern program p;
  %token <ival> INT
  %token <str> STRING
  %token <type> TYPE
-
+ %token <ternary> TERNARY
+ %token COLON
  %nonassoc INBLOCK ENDBLOCK STARTBLOCK COMMA
  %nonassoc IF WHILE REPEAT
  %nonassoc ELSE OTHERWISE
@@ -107,6 +108,7 @@ extern program p;
 %type <param>         param
 %type <exp>    funcCall
 %type <funcCallParam>     funcCallParam
+%type <exp>  ternaryEXP
 %start program
 
 %%
@@ -173,7 +175,8 @@ statement:
 
 
 
-
+ternaryEXP:
+        OPEN_PARENT exp CLOSE_PARENT  TERNARY exp COLON exp %prec ELSE {$$ =  ternaryNode( $2, $5, $7);}
 funcCallParam:
     exp COMMA funcCallParam                                    {$$ = ListAddFirst($1, $3);}
     |exp                                                         {$$ = ListAddFirst($1, NULL);}
@@ -204,4 +207,5 @@ exp:
     | exp NE exp                  { $$= BinOpNode(ne_op, $1, $3); }
     | NAME                            { $$ = varNode($1); }
     | funcCall                        {$$ = $1;}
+    | ternaryEXP              {$$ =   $1;}
     %%
diff --git a/semantic_analysis_symbols.c b/semantic_analysis_symbols.c
index a79d865..0d90c30 100644
--- a/semantic_analysis_symbols.c
+++ b/semantic_analysis_symbols.c
@@ -71,8 +71,11 @@ void symbolResolutionExpr(exp_node * e, S_table global_types, S_table function_d
                 }
                 return;
             }
-
-        // TODO add more cases for all expressions
+    case ter_exp:
+        symbolResolutionExpr(e->data.ter_op.cond, global_types,function_decs,f);
+        symbolResolutionExpr(e->data.ter_op.then, global_types,function_decs,f);
+        symbolResolutionExpr(e->data.ter_op.elsestmt, global_types,function_decs,f);
+        break;
         default:
             assert(0); // Should be dead code
     }
@@ -255,7 +258,6 @@ void symbolResolutionFunction(fundec_node * fundec, S_table globals, S_table fun
    // printf("start implicit\n");
     while(implicitVars != NULL)
     {
-
         vardec_node * implicitVar = (vardec_node*)implicitVars->head;
 
         S_symbol implicitVarSym = S_Symbol(implicitVar->name);
@@ -278,7 +280,7 @@ void symbolResolutionFunction(fundec_node * fundec, S_table globals, S_table fun
         implicitVars = implicitVars->next;
     }
 
-    // // add i and j
+    // add i and j
     vardec_node *i = VarDecNode("i",IntTyNode(),IntNode(0),1);
     if (S_look(globals, S_Symbol(i->name)) == NULL && S_look(f->imp_table, S_Symbol(i->name)) == NULL && S_look(f->args_locs_types, S_Symbol(i->name)) == NULL)
     {
@@ -314,8 +316,6 @@ void symbolResolutionFunctions(list * l, S_table global_types, S_table function_
     f->indexes = S_empty();
     f->ret = NULL;
     f->imp_table=S_empty();
-    f->name=NULL;
-
 
     // Add newly computed frame to frames
     S_enter(frames, S_Symbol(fundec->name), f);
diff --git a/semantic_analysis_symbols.o b/semantic_analysis_symbols.o
index 8006758..b94fb7d 100644
Binary files a/semantic_analysis_symbols.o and b/semantic_analysis_symbols.o differ
diff --git a/semantic_analysis_types.c b/semantic_analysis_types.c
index 4dccf03..8cb0778 100644
--- a/semantic_analysis_types.c
+++ b/semantic_analysis_types.c
@@ -7,95 +7,116 @@
 ty_node * typeCheckExpr(exp_node * e, S_table global_types, S_table function_decs, frame * f) {
 
 
-    switch(e->kind){
-        case int_exp: {
+    switch(e->kind)
+    {
+    case int_exp: {
             return IntTyNode();
-        }
-        case binop_exp: {
+    }
+    case binop_exp: {
             ty_node * expect = IntTyNode();
-                ty_node * left  = typeCheckExpr(e->data.bin_ops.e1,global_types,function_decs,f);
-                ty_node * right  = typeCheckExpr(e->data.bin_ops.e2,global_types,function_decs,f);
-                if(left != expect || right != expect)
-                {
-                    fprintf(stderr, "wrong type for binary operation expected %s for both expression, got left: %s right: %s\n", typeToStr(expect), typeToStr(left),typeToStr(right));
-                    exit(73);
-                }
+            ty_node * left  = typeCheckExpr(e->data.bin_ops.e1,global_types,function_decs,f);
+            ty_node * right  = typeCheckExpr(e->data.bin_ops.e2,global_types,function_decs,f);
+            if(left != expect || right != expect)
+            {
+                fprintf(stderr, "wrong type for binary operation expected %s for both expression, got left: %s right: %s\n", typeToStr(expect), typeToStr(left),typeToStr(right));
+                exit(73);
+            }
             return expect;
-        }
-        case unop_exp: {
+    }
+    case unop_exp: {
 
-                ty_node * expect = IntTyNode();
-                ty_node * actual  = typeCheckExpr(e->data.un_ops.e,global_types,function_decs,f);
-                if(actual != expect)
-                {
-                    fprintf(stderr, "wrong type for unary expected %s got %s\n", typeToStr(expect), typeToStr(actual));
-                    exit(73);
-                }
+            ty_node * expect = IntTyNode();
+            ty_node * actual  = typeCheckExpr(e->data.un_ops.e,global_types,function_decs,f);
+            if(actual != expect)
+            {
+                fprintf(stderr, "wrong type for unary expected %s got %s\n", typeToStr(expect), typeToStr(actual));
+                exit(73);
+            }
             return actual;
-        }
-        case str_exp: {
+    }
+    case str_exp: {
             return StrTyNode();
-        }
+    }
     case void_exp:
-            {
-                return VoidTyNode();
-            }
-        case var_exp:
-            {
+        {
+            return VoidTyNode();
+        }
+    case var_exp:
+        {
 
-                if(f!= NULL)
+            if(f!= NULL)
+            {
+                ty_node * localResult = (ty_node *)(S_look(f->args_locs_types, e->data.varVal));
+                if(localResult!= NULL)
                 {
-                    ty_node * localResult = (ty_node *)(S_look(f->args_locs_types, e->data.varVal));
-                    if(localResult!= NULL)
-                    {
-                        return localResult;
-                    }
-                    localResult = (ty_node *)(S_look(f->imp_table, e->data.varVal));
-                    if(localResult!= NULL)
-                    {
-                        return localResult;
-                    }
-
+                    return localResult;
+                }
+                localResult = (ty_node *)(S_look(f->imp_table, e->data.varVal));
+                if(localResult!= NULL)
+                {
+                    return localResult;
                 }
-                // make sure to remeber to check for func_dec
-                ty_node * result = (ty_node *)(S_look(global_types, e->data.varVal));
 
-                return result;
             }
+            // make sure to remeber to check for func_dec
+            ty_node * result = (ty_node *)(S_look(global_types, e->data.varVal));
+
+            return result;
+        }
     case func_exp:
-            {
-                fundec_node * result = (fundec_node *)(S_look(function_decs, S_Symbol(e->data.func_op.name)));
+        {
+            fundec_node * result = (fundec_node *)(S_look(function_decs, S_Symbol(e->data.func_op.name)));
 
 
-                list * argList = result->argList;
-                list * callList = e->data.func_op.argsList;
+            list * argList = result->argList;
+            list * callList = e->data.func_op.argsList;
 
-                while(argList != NULL && callList != NULL)
-                {
+            while(argList != NULL && callList != NULL)
+            {
 
-                    param * expectParam = argList->head;
-                    exp_node * cur_param = callList->head;
+                param * expectParam = argList->head;
+                exp_node * cur_param = callList->head;
 
-                    ty_node* actual = typeCheckExpr(cur_param, global_types, function_decs, f);
-                    if(actual != expectParam->ty)
-                    {
-                        fprintf(stderr, "wrong type for function's argument expected %s got %s\n", typeToStr(expectParam->ty), typeToStr(actual));
-                        exit(73);
-                    }
-                    callList = callList->next;
-                    argList = argList ->next;
-                }
-
-                if (argList != NULL || callList != NULL)
+                ty_node* actual = typeCheckExpr(cur_param, global_types, function_decs, f);
+                if(actual != expectParam->ty)
                 {
-                    fprintf(stderr, "wrong size for the function's argument");
+                    fprintf(stderr, "wrong type for function's argument expected %s got %s\n", typeToStr(expectParam->ty), typeToStr(actual));
                     exit(73);
                 }
-                return result->type;
-                // check for args
+                callList = callList->next;
+                argList = argList ->next;
+            }
 
+            if (argList != NULL || callList != NULL)
+            {
+                fprintf(stderr, "wrong size for the function's argument");
+                exit(73);
             }
-        // TODO add more cases for all expressions
+            return result->type;
+            // check for args
+
+        }
+    case ter_exp: {
+        // check cond is int
+            ty_node * expect = IntTyNode();
+        ty_node * actual = typeCheckExpr(e->data.ter_op.cond, global_types,function_decs,f);
+        if(expect != actual)
+        {
+            fprintf(stderr, "wrong type for condition expected %s got %s\n", typeToStr(expect), typeToStr(actual));
+            exit(73);
+        }
+
+        // make sure then and else shares the same type
+        ty_node * then = typeCheckExpr(e->data.ter_op.then, global_types,function_decs,f);
+        ty_node * elseStmt = typeCheckExpr(e->data.ter_op.elsestmt, global_types,function_decs,f);
+
+        if(then != elseStmt)
+        {
+            fprintf(stderr, "Type mismatch for ternary expression then %s else %s\n", typeToStr(then), typeToStr(elseStmt));
+            exit(73);
+        }
+            return then;
+    }
         default:
             assert(0); // Should be dead code
     }
diff --git a/semantic_analysis_types.o b/semantic_analysis_types.o
index 5979bec..816b2e7 100644
Binary files a/semantic_analysis_types.o and b/semantic_analysis_types.o differ
diff --git a/transform.c b/transform.c
index e62eb96..ef4e0ac 100644
--- a/transform.c
+++ b/transform.c
@@ -125,6 +125,14 @@ void transformExpr(exp_node * e, S_table global_types, S_table function_decs, fr
             break;
     case void_exp:
             break;
+    case ter_exp:
+        {
+            transformExpr(e->data.ter_op.cond,global_types,function_decs,f);
+            transformExpr(e->data.ter_op.elsestmt,global_types,function_decs,f);
+            transformExpr(e->data.ter_op.then,global_types,function_decs,f);
+            break;
+        }
+
         default:
             assert(0);
     }
diff --git a/transform.o b/transform.o
index c499caf..838df61 100644
Binary files a/transform.o and b/transform.o differ
diff --git a/y.output b/y.output
index ec70fce..251f018 100644
--- a/y.output
+++ b/y.output
@@ -49,129 +49,137 @@ Grammar
    29          | NAME ASSIGN exp SEMICOLON
    30          | funcCall SEMICOLON
 
-   31 funcCallParam: exp COMMA funcCallParam
-   32              | exp
-
-   33 funcCall: NAME OPEN_PARENT CLOSE_PARENT
-   34         | NAME OPEN_PARENT funcCallParam CLOSE_PARENT
-
-   35 exp: INT
-   36    | STRING
-   37    | OPEN_PARENT exp CLOSE_PARENT
-   38    | exp PLUS exp
-   39    | exp MINUS exp
-   40    | exp MUL exp
-   41    | exp DIV exp
-   42    | exp REM exp
-   43    | exp BOR exp
-   44    | exp BAND exp
-   45    | exp XOR exp
-   46    | exp LT exp
-   47    | exp LE exp
-   48    | exp GT exp
-   49    | exp GE exp
-   50    | exp OR exp
-   51    | exp AND exp
-   52    | NOT exp
-   53    | exp EQ exp
-   54    | exp NE exp
-   55    | NAME
-   56    | funcCall
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY exp COLON exp
+
+   32 funcCallParam: exp COMMA funcCallParam
+   33              | exp
+
+   34 funcCall: NAME OPEN_PARENT CLOSE_PARENT
+   35         | NAME OPEN_PARENT funcCallParam CLOSE_PARENT
+
+   36 exp: INT
+   37    | STRING
+   38    | OPEN_PARENT exp CLOSE_PARENT
+   39    | exp PLUS exp
+   40    | exp MINUS exp
+   41    | exp MUL exp
+   42    | exp DIV exp
+   43    | exp REM exp
+   44    | exp BOR exp
+   45    | exp BAND exp
+   46    | exp XOR exp
+   47    | exp LT exp
+   48    | exp LE exp
+   49    | exp GT exp
+   50    | exp GE exp
+   51    | exp OR exp
+   52    | exp AND exp
+   53    | NOT exp
+   54    | exp EQ exp
+   55    | exp NE exp
+   56    | NAME
+   57    | funcCall
+   58    | ternaryEXP
 
 
 Terminals, with rules where they appear
 
     $end (0) 0 13
     error (256)
-    NAME <name> (258) 4 5 8 16 17 20 21 29 33 34 55
-    INT <ival> (259) 35
-    STRING <str> (260) 36
+    NAME <name> (258) 4 5 8 16 17 20 21 29 34 35 56
+    INT <ival> (259) 36
+    STRING <str> (260) 37
     TYPE <type> (261) 4 5 8 16 17 20 21
-    INBLOCK (262)
-    ENDBLOCK (263) 11 16 17
-    STARTBLOCK (264) 11 13 16 17
-    COMMA (265) 21 31
-    IF (266) 24 25
-    WHILE (267) 26 27
-    REPEAT (268) 28
-    ELSE (269) 24
-    OTHERWISE (270) 26
-    VAR (271) 4 8
-    IMPLICIT (272) 5
-    RETURN (273) 22 23
-    FUN (274) 16 17
-    OPEN_PARENT (275) 18 19 24 25 26 27 28 33 34 37
-    CLOSE_PARENT (276) 18 19 24 25 26 27 28 33 34 37
-    SEMICOLON (277) 4 5 8 22 23 29 30
-    ASSIGN (278) 4 5 8 29
-    OR (279) 50
-    AND (280) 51
-    BOR (281) 43
-    XOR (282) 45
-    BAND (283) 44
-    EQ (284) 53
-    NE (285) 54
-    LT (286) 46
-    LE (287) 47
-    GT (288) 48
-    GE (289) 49
-    PLUS (290) 38
-    MINUS (291) 39
-    MUL (292) 40
-    DIV (293) 41
-    REM (294) 42
-    NOT (295) 52
+    TERNARY <ternary> (262) 31
+    COLON (263) 31
+    INBLOCK (264)
+    ENDBLOCK (265) 11 16 17
+    STARTBLOCK (266) 11 13 16 17
+    COMMA (267) 21 32
+    IF (268) 24 25
+    WHILE (269) 26 27
+    REPEAT (270) 28
+    ELSE (271) 24
+    OTHERWISE (272) 26
+    VAR (273) 4 8
+    IMPLICIT (274) 5
+    RETURN (275) 22 23
+    FUN (276) 16 17
+    OPEN_PARENT (277) 18 19 24 25 26 27 28 31 34 35 38
+    CLOSE_PARENT (278) 18 19 24 25 26 27 28 31 34 35 38
+    SEMICOLON (279) 4 5 8 22 23 29 30
+    ASSIGN (280) 4 5 8 29
+    OR (281) 51
+    AND (282) 52
+    BOR (283) 44
+    XOR (284) 46
+    BAND (285) 45
+    EQ (286) 54
+    NE (287) 55
+    LT (288) 47
+    LE (289) 48
+    GT (290) 49
+    GE (291) 50
+    PLUS (292) 39
+    MINUS (293) 40
+    MUL (294) 41
+    DIV (295) 42
+    REM (296) 43
+    NOT (297) 53
 
 
 Nonterminals, with rules where they appear
 
-    $accept (41)
+    $accept (43)
         on left: 0
-    program (42)
+    program (44)
         on left: 1
         on right: 0
-    variables <vars> (43)
+    variables <vars> (45)
         on left: 2 3
         on right: 1 3
-    variable <var> (44)
+    variable <var> (46)
         on left: 4 5
         on right: 3
-    funcVars <vars> (45)
+    funcVars <vars> (47)
         on left: 6 7
         on right: 6 16
-    funcVar <var> (46)
+    funcVar <var> (48)
         on left: 8
         on right: 6 7
-    stmt <stmt> (47)
+    stmt <stmt> (49)
         on left: 9 10
         on right: 1 10 11 13 16 17
-    block <stmt> (48)
+    block <stmt> (50)
         on left: 11 12 13
         on right: 24 25 26 27 28
-    functions <funcs> (49)
+    functions <funcs> (51)
         on left: 14 15
         on right: 1 15
-    function <func> (50)
+    function <func> (52)
         on left: 16 17
         on right: 15
-    args <args> (51)
+    args <args> (53)
         on left: 18 19
         on right: 16 17
-    param <param> (52)
+    param <param> (54)
         on left: 20 21
         on right: 18 21
-    statement <statement> (53)
+    statement <statement> (55)
         on left: 22 23 24 25 26 27 28 29 30
         on right: 9 10 12
-    funcCallParam <funcCallParam> (54)
-        on left: 31 32
-        on right: 31 34
-    funcCall <exp> (55)
-        on left: 33 34
-        on right: 30 56
-    exp <exp> (56)
-        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
-        on right: 4 5 8 22 24 25 26 27 28 29 31 32 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
+    ternaryEXP <exp> (56)
+        on left: 31
+        on right: 58
+    funcCallParam <funcCallParam> (57)
+        on left: 32 33
+        on right: 32 35
+    funcCall <exp> (58)
+        on left: 34 35
+        on right: 30 57
+    exp <exp> (59)
+        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
+        on right: 4 5 8 22 24 25 26 27 28 29 31 32 33 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
 
 
 State 0
@@ -268,8 +276,8 @@ State 9
 State 10
 
    29 statement: NAME • ASSIGN exp SEMICOLON
-   33 funcCall: NAME • OPEN_PARENT CLOSE_PARENT
-   34         | NAME • OPEN_PARENT funcCallParam CLOSE_PARENT
+   34 funcCall: NAME • OPEN_PARENT CLOSE_PARENT
+   35         | NAME • OPEN_PARENT funcCallParam CLOSE_PARENT
 
     OPEN_PARENT  shift, and go to state 22
     ASSIGN       shift, and go to state 23
@@ -310,8 +318,9 @@ State 14
     SEMICOLON    shift, and go to state 31
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 34
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 35
 
 
 State 15
@@ -319,7 +328,7 @@ State 15
    16 function: FUN • NAME TYPE args STARTBLOCK funcVars stmt ENDBLOCK
    17         | FUN • NAME TYPE args STARTBLOCK stmt ENDBLOCK
 
-    NAME  shift, and go to state 35
+    NAME  shift, and go to state 36
 
 
 State 16
@@ -349,7 +358,7 @@ State 18
 
     $default  reduce using rule 9 (stmt)
 
-    stmt       go to state 36
+    stmt       go to state 37
     statement  go to state 18
     funcCall   go to state 19
 
@@ -358,38 +367,39 @@ State 19
 
    30 statement: funcCall • SEMICOLON
 
-    SEMICOLON  shift, and go to state 37
+    SEMICOLON  shift, and go to state 38
 
 
 State 20
 
     4 variable: VAR NAME TYPE • ASSIGN exp SEMICOLON
 
-    ASSIGN  shift, and go to state 38
+    ASSIGN  shift, and go to state 39
 
 
 State 21
 
     5 variable: IMPLICIT NAME TYPE • ASSIGN exp SEMICOLON
 
-    ASSIGN  shift, and go to state 39
+    ASSIGN  shift, and go to state 40
 
 
 State 22
 
-   33 funcCall: NAME OPEN_PARENT • CLOSE_PARENT
-   34         | NAME OPEN_PARENT • funcCallParam CLOSE_PARENT
+   34 funcCall: NAME OPEN_PARENT • CLOSE_PARENT
+   35         | NAME OPEN_PARENT • funcCallParam CLOSE_PARENT
 
     NAME          shift, and go to state 27
     INT           shift, and go to state 28
     STRING        shift, and go to state 29
     OPEN_PARENT   shift, and go to state 30
-    CLOSE_PARENT  shift, and go to state 40
+    CLOSE_PARENT  shift, and go to state 41
     NOT           shift, and go to state 32
 
-    funcCallParam  go to state 41
-    funcCall       go to state 33
-    exp            go to state 42
+    ternaryEXP     go to state 33
+    funcCallParam  go to state 42
+    funcCall       go to state 34
+    exp            go to state 43
 
 
 State 23
@@ -402,8 +412,9 @@ State 23
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 43
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 44
 
 
 State 24
@@ -417,8 +428,9 @@ State 24
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 44
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 45
 
 
 State 25
@@ -432,8 +444,9 @@ State 25
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 45
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 46
 
 
 State 26
@@ -446,38 +459,40 @@ State 26
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 46
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 47
 
 
 State 27
 
-   33 funcCall: NAME • OPEN_PARENT CLOSE_PARENT
-   34         | NAME • OPEN_PARENT funcCallParam CLOSE_PARENT
-   55 exp: NAME •
+   34 funcCall: NAME • OPEN_PARENT CLOSE_PARENT
+   35         | NAME • OPEN_PARENT funcCallParam CLOSE_PARENT
+   56 exp: NAME •
 
     OPEN_PARENT  shift, and go to state 22
 
-    $default  reduce using rule 55 (exp)
+    $default  reduce using rule 56 (exp)
 
 
 State 28
 
-   35 exp: INT •
+   36 exp: INT •
 
-    $default  reduce using rule 35 (exp)
+    $default  reduce using rule 36 (exp)
 
 
 State 29
 
-   36 exp: STRING •
+   37 exp: STRING •
 
-    $default  reduce using rule 36 (exp)
+    $default  reduce using rule 37 (exp)
 
 
 State 30
 
-   37 exp: OPEN_PARENT • exp CLOSE_PARENT
+   31 ternaryEXP: OPEN_PARENT • exp CLOSE_PARENT TERNARY exp COLON exp
+   38 exp: OPEN_PARENT • exp CLOSE_PARENT
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -485,8 +500,9 @@ State 30
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 47
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 48
 
 
 State 31
@@ -498,7 +514,7 @@ State 31
 
 State 32
 
-   52 exp: NOT • exp
+   53 exp: NOT • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -506,79 +522,87 @@ State 32
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 48
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 49
 
 
 State 33
 
-   56 exp: funcCall •
+   58 exp: ternaryEXP •
 
-    $default  reduce using rule 56 (exp)
+    $default  reduce using rule 58 (exp)
 
 
 State 34
 
-   22 statement: RETURN exp • SEMICOLON
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    SEMICOLON  shift, and go to state 49
-    OR         shift, and go to state 50
-    AND        shift, and go to state 51
-    BOR        shift, and go to state 52
-    XOR        shift, and go to state 53
-    BAND       shift, and go to state 54
-    EQ         shift, and go to state 55
-    NE         shift, and go to state 56
-    LT         shift, and go to state 57
-    LE         shift, and go to state 58
-    GT         shift, and go to state 59
-    GE         shift, and go to state 60
-    PLUS       shift, and go to state 61
-    MINUS      shift, and go to state 62
-    MUL        shift, and go to state 63
-    DIV        shift, and go to state 64
-    REM        shift, and go to state 65
+   57 exp: funcCall •
+
+    $default  reduce using rule 57 (exp)
 
 
 State 35
 
+   22 statement: RETURN exp • SEMICOLON
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    SEMICOLON  shift, and go to state 50
+    OR         shift, and go to state 51
+    AND        shift, and go to state 52
+    BOR        shift, and go to state 53
+    XOR        shift, and go to state 54
+    BAND       shift, and go to state 55
+    EQ         shift, and go to state 56
+    NE         shift, and go to state 57
+    LT         shift, and go to state 58
+    LE         shift, and go to state 59
+    GT         shift, and go to state 60
+    GE         shift, and go to state 61
+    PLUS       shift, and go to state 62
+    MINUS      shift, and go to state 63
+    MUL        shift, and go to state 64
+    DIV        shift, and go to state 65
+    REM        shift, and go to state 66
+
+
+State 36
+
    16 function: FUN NAME • TYPE args STARTBLOCK funcVars stmt ENDBLOCK
    17         | FUN NAME • TYPE args STARTBLOCK stmt ENDBLOCK
 
-    TYPE  shift, and go to state 66
+    TYPE  shift, and go to state 67
 
 
-State 36
+State 37
 
    10 stmt: statement stmt •
 
     $default  reduce using rule 10 (stmt)
 
 
-State 37
+State 38
 
    30 statement: funcCall SEMICOLON •
 
     $default  reduce using rule 30 (statement)
 
 
-State 38
+State 39
 
     4 variable: VAR NAME TYPE ASSIGN • exp SEMICOLON
 
@@ -588,11 +612,12 @@ State 38
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 67
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 68
 
 
-State 39
+State 40
 
     5 variable: IMPLICIT NAME TYPE ASSIGN • exp SEMICOLON
 
@@ -602,310 +627,298 @@ State 39
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 68
-
-
-State 40
-
-   33 funcCall: NAME OPEN_PARENT CLOSE_PARENT •
-
-    $default  reduce using rule 33 (funcCall)
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 69
 
 
 State 41
 
-   34 funcCall: NAME OPEN_PARENT funcCallParam • CLOSE_PARENT
+   34 funcCall: NAME OPEN_PARENT CLOSE_PARENT •
 
-    CLOSE_PARENT  shift, and go to state 69
+    $default  reduce using rule 34 (funcCall)
 
 
 State 42
 
-   31 funcCallParam: exp • COMMA funcCallParam
-   32              | exp •
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    COMMA  shift, and go to state 70
-    OR     shift, and go to state 50
-    AND    shift, and go to state 51
-    BOR    shift, and go to state 52
-    XOR    shift, and go to state 53
-    BAND   shift, and go to state 54
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   35 funcCall: NAME OPEN_PARENT funcCallParam • CLOSE_PARENT
 
-    $default  reduce using rule 32 (funcCallParam)
+    CLOSE_PARENT  shift, and go to state 70
 
 
 State 43
 
-   29 statement: NAME ASSIGN exp • SEMICOLON
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    SEMICOLON  shift, and go to state 71
-    OR         shift, and go to state 50
-    AND        shift, and go to state 51
-    BOR        shift, and go to state 52
-    XOR        shift, and go to state 53
-    BAND       shift, and go to state 54
-    EQ         shift, and go to state 55
-    NE         shift, and go to state 56
-    LT         shift, and go to state 57
-    LE         shift, and go to state 58
-    GT         shift, and go to state 59
-    GE         shift, and go to state 60
-    PLUS       shift, and go to state 61
-    MINUS      shift, and go to state 62
-    MUL        shift, and go to state 63
-    DIV        shift, and go to state 64
-    REM        shift, and go to state 65
+   32 funcCallParam: exp • COMMA funcCallParam
+   33              | exp •
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    COMMA  shift, and go to state 71
+    OR     shift, and go to state 51
+    AND    shift, and go to state 52
+    BOR    shift, and go to state 53
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
+
+    $default  reduce using rule 33 (funcCallParam)
 
 
 State 44
 
-   24 statement: IF OPEN_PARENT exp • CLOSE_PARENT block ELSE block
-   25          | IF OPEN_PARENT exp • CLOSE_PARENT block
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    CLOSE_PARENT  shift, and go to state 72
-    OR            shift, and go to state 50
-    AND           shift, and go to state 51
-    BOR           shift, and go to state 52
-    XOR           shift, and go to state 53
-    BAND          shift, and go to state 54
-    EQ            shift, and go to state 55
-    NE            shift, and go to state 56
-    LT            shift, and go to state 57
-    LE            shift, and go to state 58
-    GT            shift, and go to state 59
-    GE            shift, and go to state 60
-    PLUS          shift, and go to state 61
-    MINUS         shift, and go to state 62
-    MUL           shift, and go to state 63
-    DIV           shift, and go to state 64
-    REM           shift, and go to state 65
+   29 statement: NAME ASSIGN exp • SEMICOLON
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    SEMICOLON  shift, and go to state 72
+    OR         shift, and go to state 51
+    AND        shift, and go to state 52
+    BOR        shift, and go to state 53
+    XOR        shift, and go to state 54
+    BAND       shift, and go to state 55
+    EQ         shift, and go to state 56
+    NE         shift, and go to state 57
+    LT         shift, and go to state 58
+    LE         shift, and go to state 59
+    GT         shift, and go to state 60
+    GE         shift, and go to state 61
+    PLUS       shift, and go to state 62
+    MINUS      shift, and go to state 63
+    MUL        shift, and go to state 64
+    DIV        shift, and go to state 65
+    REM        shift, and go to state 66
 
 
 State 45
 
-   26 statement: WHILE OPEN_PARENT exp • CLOSE_PARENT block OTHERWISE block
-   27          | WHILE OPEN_PARENT exp • CLOSE_PARENT block
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   24 statement: IF OPEN_PARENT exp • CLOSE_PARENT block ELSE block
+   25          | IF OPEN_PARENT exp • CLOSE_PARENT block
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     CLOSE_PARENT  shift, and go to state 73
-    OR            shift, and go to state 50
-    AND           shift, and go to state 51
-    BOR           shift, and go to state 52
-    XOR           shift, and go to state 53
-    BAND          shift, and go to state 54
-    EQ            shift, and go to state 55
-    NE            shift, and go to state 56
-    LT            shift, and go to state 57
-    LE            shift, and go to state 58
-    GT            shift, and go to state 59
-    GE            shift, and go to state 60
-    PLUS          shift, and go to state 61
-    MINUS         shift, and go to state 62
-    MUL           shift, and go to state 63
-    DIV           shift, and go to state 64
-    REM           shift, and go to state 65
+    OR            shift, and go to state 51
+    AND           shift, and go to state 52
+    BOR           shift, and go to state 53
+    XOR           shift, and go to state 54
+    BAND          shift, and go to state 55
+    EQ            shift, and go to state 56
+    NE            shift, and go to state 57
+    LT            shift, and go to state 58
+    LE            shift, and go to state 59
+    GT            shift, and go to state 60
+    GE            shift, and go to state 61
+    PLUS          shift, and go to state 62
+    MINUS         shift, and go to state 63
+    MUL           shift, and go to state 64
+    DIV           shift, and go to state 65
+    REM           shift, and go to state 66
 
 
 State 46
 
-   28 statement: REPEAT OPEN_PARENT exp • CLOSE_PARENT block
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   26 statement: WHILE OPEN_PARENT exp • CLOSE_PARENT block OTHERWISE block
+   27          | WHILE OPEN_PARENT exp • CLOSE_PARENT block
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     CLOSE_PARENT  shift, and go to state 74
-    OR            shift, and go to state 50
-    AND           shift, and go to state 51
-    BOR           shift, and go to state 52
-    XOR           shift, and go to state 53
-    BAND          shift, and go to state 54
-    EQ            shift, and go to state 55
-    NE            shift, and go to state 56
-    LT            shift, and go to state 57
-    LE            shift, and go to state 58
-    GT            shift, and go to state 59
-    GE            shift, and go to state 60
-    PLUS          shift, and go to state 61
-    MINUS         shift, and go to state 62
-    MUL           shift, and go to state 63
-    DIV           shift, and go to state 64
-    REM           shift, and go to state 65
+    OR            shift, and go to state 51
+    AND           shift, and go to state 52
+    BOR           shift, and go to state 53
+    XOR           shift, and go to state 54
+    BAND          shift, and go to state 55
+    EQ            shift, and go to state 56
+    NE            shift, and go to state 57
+    LT            shift, and go to state 58
+    LE            shift, and go to state 59
+    GT            shift, and go to state 60
+    GE            shift, and go to state 61
+    PLUS          shift, and go to state 62
+    MINUS         shift, and go to state 63
+    MUL           shift, and go to state 64
+    DIV           shift, and go to state 65
+    REM           shift, and go to state 66
 
 
 State 47
 
-   37 exp: OPEN_PARENT exp • CLOSE_PARENT
-   38    | exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   28 statement: REPEAT OPEN_PARENT exp • CLOSE_PARENT block
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     CLOSE_PARENT  shift, and go to state 75
-    OR            shift, and go to state 50
-    AND           shift, and go to state 51
-    BOR           shift, and go to state 52
-    XOR           shift, and go to state 53
-    BAND          shift, and go to state 54
-    EQ            shift, and go to state 55
-    NE            shift, and go to state 56
-    LT            shift, and go to state 57
-    LE            shift, and go to state 58
-    GT            shift, and go to state 59
-    GE            shift, and go to state 60
-    PLUS          shift, and go to state 61
-    MINUS         shift, and go to state 62
-    MUL           shift, and go to state 63
-    DIV           shift, and go to state 64
-    REM           shift, and go to state 65
+    OR            shift, and go to state 51
+    AND           shift, and go to state 52
+    BOR           shift, and go to state 53
+    XOR           shift, and go to state 54
+    BAND          shift, and go to state 55
+    EQ            shift, and go to state 56
+    NE            shift, and go to state 57
+    LT            shift, and go to state 58
+    LE            shift, and go to state 59
+    GT            shift, and go to state 60
+    GE            shift, and go to state 61
+    PLUS          shift, and go to state 62
+    MINUS         shift, and go to state 63
+    MUL           shift, and go to state 64
+    DIV           shift, and go to state 65
+    REM           shift, and go to state 66
 
 
 State 48
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   52    | NOT exp •
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    $default  reduce using rule 52 (exp)
+   31 ternaryEXP: OPEN_PARENT exp • CLOSE_PARENT TERNARY exp COLON exp
+   38 exp: OPEN_PARENT exp • CLOSE_PARENT
+   39    | exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    CLOSE_PARENT  shift, and go to state 76
+    OR            shift, and go to state 51
+    AND           shift, and go to state 52
+    BOR           shift, and go to state 53
+    XOR           shift, and go to state 54
+    BAND          shift, and go to state 55
+    EQ            shift, and go to state 56
+    NE            shift, and go to state 57
+    LT            shift, and go to state 58
+    LE            shift, and go to state 59
+    GT            shift, and go to state 60
+    GE            shift, and go to state 61
+    PLUS          shift, and go to state 62
+    MINUS         shift, and go to state 63
+    MUL           shift, and go to state 64
+    DIV           shift, and go to state 65
+    REM           shift, and go to state 66
 
 
 State 49
 
-   22 statement: RETURN exp SEMICOLON •
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   53    | NOT exp •
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
-    $default  reduce using rule 22 (statement)
+    $default  reduce using rule 53 (exp)
 
 
 State 50
 
-   50 exp: exp OR • exp
-
-    NAME         shift, and go to state 27
-    INT          shift, and go to state 28
-    STRING       shift, and go to state 29
-    OPEN_PARENT  shift, and go to state 30
-    NOT          shift, and go to state 32
+   22 statement: RETURN exp SEMICOLON •
 
-    funcCall  go to state 33
-    exp       go to state 76
+    $default  reduce using rule 22 (statement)
 
 
 State 51
 
-   51 exp: exp AND • exp
+   51 exp: exp OR • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -913,13 +926,14 @@ State 51
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 77
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 77
 
 
 State 52
 
-   43 exp: exp BOR • exp
+   52 exp: exp AND • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -927,13 +941,14 @@ State 52
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 78
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 78
 
 
 State 53
 
-   45 exp: exp XOR • exp
+   44 exp: exp BOR • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -941,13 +956,14 @@ State 53
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 79
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 79
 
 
 State 54
 
-   44 exp: exp BAND • exp
+   46 exp: exp XOR • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -955,13 +971,14 @@ State 54
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 80
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 80
 
 
 State 55
 
-   53 exp: exp EQ • exp
+   45 exp: exp BAND • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -969,13 +986,14 @@ State 55
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 81
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 81
 
 
 State 56
 
-   54 exp: exp NE • exp
+   54 exp: exp EQ • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -983,13 +1001,14 @@ State 56
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 82
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 82
 
 
 State 57
 
-   46 exp: exp LT • exp
+   55 exp: exp NE • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -997,13 +1016,14 @@ State 57
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 83
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 83
 
 
 State 58
 
-   47 exp: exp LE • exp
+   47 exp: exp LT • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1011,13 +1031,14 @@ State 58
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 84
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 84
 
 
 State 59
 
-   48 exp: exp GT • exp
+   48 exp: exp LE • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1025,13 +1046,14 @@ State 59
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 85
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 85
 
 
 State 60
 
-   49 exp: exp GE • exp
+   49 exp: exp GT • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1039,13 +1061,14 @@ State 60
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 86
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 86
 
 
 State 61
 
-   38 exp: exp PLUS • exp
+   50 exp: exp GE • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1053,13 +1076,14 @@ State 61
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 87
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 87
 
 
 State 62
 
-   39 exp: exp MINUS • exp
+   39 exp: exp PLUS • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1067,13 +1091,14 @@ State 62
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 88
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 88
 
 
 State 63
 
-   40 exp: exp MUL • exp
+   40 exp: exp MINUS • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1081,13 +1106,14 @@ State 63
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 89
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 89
 
 
 State 64
 
-   41 exp: exp DIV • exp
+   41 exp: exp MUL • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1095,13 +1121,14 @@ State 64
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 90
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 90
 
 
 State 65
 
-   42 exp: exp REM • exp
+   42 exp: exp DIV • exp
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1109,108 +1136,124 @@ State 65
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 91
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 91
 
 
 State 66
 
-   16 function: FUN NAME TYPE • args STARTBLOCK funcVars stmt ENDBLOCK
-   17         | FUN NAME TYPE • args STARTBLOCK stmt ENDBLOCK
+   43 exp: exp REM • exp
 
-    OPEN_PARENT  shift, and go to state 92
+    NAME         shift, and go to state 27
+    INT          shift, and go to state 28
+    STRING       shift, and go to state 29
+    OPEN_PARENT  shift, and go to state 30
+    NOT          shift, and go to state 32
 
-    args  go to state 93
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 92
 
 
 State 67
 
-    4 variable: VAR NAME TYPE ASSIGN exp • SEMICOLON
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    SEMICOLON  shift, and go to state 94
-    OR         shift, and go to state 50
-    AND        shift, and go to state 51
-    BOR        shift, and go to state 52
-    XOR        shift, and go to state 53
-    BAND       shift, and go to state 54
-    EQ         shift, and go to state 55
-    NE         shift, and go to state 56
-    LT         shift, and go to state 57
-    LE         shift, and go to state 58
-    GT         shift, and go to state 59
-    GE         shift, and go to state 60
-    PLUS       shift, and go to state 61
-    MINUS      shift, and go to state 62
-    MUL        shift, and go to state 63
-    DIV        shift, and go to state 64
-    REM        shift, and go to state 65
+   16 function: FUN NAME TYPE • args STARTBLOCK funcVars stmt ENDBLOCK
+   17         | FUN NAME TYPE • args STARTBLOCK stmt ENDBLOCK
+
+    OPEN_PARENT  shift, and go to state 93
+
+    args  go to state 94
 
 
 State 68
 
-    5 variable: IMPLICIT NAME TYPE ASSIGN exp • SEMICOLON
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+    4 variable: VAR NAME TYPE ASSIGN exp • SEMICOLON
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     SEMICOLON  shift, and go to state 95
-    OR         shift, and go to state 50
-    AND        shift, and go to state 51
-    BOR        shift, and go to state 52
-    XOR        shift, and go to state 53
-    BAND       shift, and go to state 54
-    EQ         shift, and go to state 55
-    NE         shift, and go to state 56
-    LT         shift, and go to state 57
-    LE         shift, and go to state 58
-    GT         shift, and go to state 59
-    GE         shift, and go to state 60
-    PLUS       shift, and go to state 61
-    MINUS      shift, and go to state 62
-    MUL        shift, and go to state 63
-    DIV        shift, and go to state 64
-    REM        shift, and go to state 65
+    OR         shift, and go to state 51
+    AND        shift, and go to state 52
+    BOR        shift, and go to state 53
+    XOR        shift, and go to state 54
+    BAND       shift, and go to state 55
+    EQ         shift, and go to state 56
+    NE         shift, and go to state 57
+    LT         shift, and go to state 58
+    LE         shift, and go to state 59
+    GT         shift, and go to state 60
+    GE         shift, and go to state 61
+    PLUS       shift, and go to state 62
+    MINUS      shift, and go to state 63
+    MUL        shift, and go to state 64
+    DIV        shift, and go to state 65
+    REM        shift, and go to state 66
 
 
 State 69
 
-   34 funcCall: NAME OPEN_PARENT funcCallParam CLOSE_PARENT •
-
-    $default  reduce using rule 34 (funcCall)
+    5 variable: IMPLICIT NAME TYPE ASSIGN exp • SEMICOLON
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    SEMICOLON  shift, and go to state 96
+    OR         shift, and go to state 51
+    AND        shift, and go to state 52
+    BOR        shift, and go to state 53
+    XOR        shift, and go to state 54
+    BAND       shift, and go to state 55
+    EQ         shift, and go to state 56
+    NE         shift, and go to state 57
+    LT         shift, and go to state 58
+    LE         shift, and go to state 59
+    GT         shift, and go to state 60
+    GE         shift, and go to state 61
+    PLUS       shift, and go to state 62
+    MINUS      shift, and go to state 63
+    MUL        shift, and go to state 64
+    DIV        shift, and go to state 65
+    REM        shift, and go to state 66
 
 
 State 70
 
-   31 funcCallParam: exp COMMA • funcCallParam
+   35 funcCall: NAME OPEN_PARENT funcCallParam CLOSE_PARENT •
+
+    $default  reduce using rule 35 (funcCall)
+
+
+State 71
+
+   32 funcCallParam: exp COMMA • funcCallParam
 
     NAME         shift, and go to state 27
     INT          shift, and go to state 28
@@ -1218,606 +1261,610 @@ State 70
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCallParam  go to state 96
-    funcCall       go to state 33
-    exp            go to state 42
+    ternaryEXP     go to state 33
+    funcCallParam  go to state 97
+    funcCall       go to state 34
+    exp            go to state 43
 
 
-State 71
+State 72
 
    29 statement: NAME ASSIGN exp SEMICOLON •
 
     $default  reduce using rule 29 (statement)
 
 
-State 72
+State 73
 
    24 statement: IF OPEN_PARENT exp CLOSE_PARENT • block ELSE block
    25          | IF OPEN_PARENT exp CLOSE_PARENT • block
 
     NAME        shift, and go to state 10
-    STARTBLOCK  shift, and go to state 97
+    STARTBLOCK  shift, and go to state 98
     IF          shift, and go to state 11
     WHILE       shift, and go to state 12
     REPEAT      shift, and go to state 13
     RETURN      shift, and go to state 14
 
-    block      go to state 98
-    statement  go to state 99
+    block      go to state 99
+    statement  go to state 100
     funcCall   go to state 19
 
 
-State 73
+State 74
 
    26 statement: WHILE OPEN_PARENT exp CLOSE_PARENT • block OTHERWISE block
    27          | WHILE OPEN_PARENT exp CLOSE_PARENT • block
 
     NAME        shift, and go to state 10
-    STARTBLOCK  shift, and go to state 97
+    STARTBLOCK  shift, and go to state 98
     IF          shift, and go to state 11
     WHILE       shift, and go to state 12
     REPEAT      shift, and go to state 13
     RETURN      shift, and go to state 14
 
-    block      go to state 100
-    statement  go to state 99
+    block      go to state 101
+    statement  go to state 100
     funcCall   go to state 19
 
 
-State 74
+State 75
 
    28 statement: REPEAT OPEN_PARENT exp CLOSE_PARENT • block
 
     NAME        shift, and go to state 10
-    STARTBLOCK  shift, and go to state 97
+    STARTBLOCK  shift, and go to state 98
     IF          shift, and go to state 11
     WHILE       shift, and go to state 12
     REPEAT      shift, and go to state 13
     RETURN      shift, and go to state 14
 
-    block      go to state 101
-    statement  go to state 99
+    block      go to state 102
+    statement  go to state 100
     funcCall   go to state 19
 
 
-State 75
-
-   37 exp: OPEN_PARENT exp CLOSE_PARENT •
-
-    $default  reduce using rule 37 (exp)
-
-
 State 76
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   50    | exp OR exp •
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    AND    shift, and go to state 51
-    BOR    shift, and go to state 52
-    XOR    shift, and go to state 53
-    BAND   shift, and go to state 54
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT • TERNARY exp COLON exp
+   38 exp: OPEN_PARENT exp CLOSE_PARENT •
 
-    $default  reduce using rule 50 (exp)
+    TERNARY  shift, and go to state 103
+
+    $default  reduce using rule 38 (exp)
 
 
 State 77
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   51    | exp AND exp •
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    BOR    shift, and go to state 52
-    XOR    shift, and go to state 53
-    BAND   shift, and go to state 54
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   51    | exp OR exp •
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    AND    shift, and go to state 52
+    BOR    shift, and go to state 53
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
     $default  reduce using rule 51 (exp)
 
 
 State 78
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   43    | exp BOR exp •
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    XOR    shift, and go to state 53
-    BAND   shift, and go to state 54
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   52    | exp AND exp •
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    BOR    shift, and go to state 53
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 43 (exp)
+    $default  reduce using rule 52 (exp)
 
 
 State 79
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   45    | exp XOR exp •
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    BAND   shift, and go to state 54
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   44    | exp BOR exp •
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 45 (exp)
+    $default  reduce using rule 44 (exp)
 
 
 State 80
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   44    | exp BAND exp •
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    EQ     shift, and go to state 55
-    NE     shift, and go to state 56
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   46    | exp XOR exp •
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 44 (exp)
+    $default  reduce using rule 46 (exp)
 
 
 State 81
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   53    | exp EQ exp •
-   54    | exp • NE exp
-
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   45    | exp BAND exp •
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 53 (exp)
+    $default  reduce using rule 45 (exp)
 
 
 State 82
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-   54    | exp NE exp •
-
-    LT     shift, and go to state 57
-    LE     shift, and go to state 58
-    GT     shift, and go to state 59
-    GE     shift, and go to state 60
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   54    | exp EQ exp •
+   55    | exp • NE exp
+
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
     $default  reduce using rule 54 (exp)
 
 
 State 83
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   46    | exp LT exp •
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+   55    | exp NE exp •
+
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 46 (exp)
+    $default  reduce using rule 55 (exp)
 
 
 State 84
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   47    | exp LE exp •
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   47    | exp LT exp •
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
     $default  reduce using rule 47 (exp)
 
 
 State 85
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   48    | exp GT exp •
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   48    | exp LE exp •
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
     $default  reduce using rule 48 (exp)
 
 
 State 86
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   49    | exp GE exp •
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    PLUS   shift, and go to state 61
-    MINUS  shift, and go to state 62
-    MUL    shift, and go to state 63
-    DIV    shift, and go to state 64
-    REM    shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   49    | exp GT exp •
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
     $default  reduce using rule 49 (exp)
 
 
 State 87
 
-   38 exp: exp • PLUS exp
-   38    | exp PLUS exp •
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    MUL  shift, and go to state 63
-    DIV  shift, and go to state 64
-    REM  shift, and go to state 65
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   50    | exp GE exp •
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
 
-    $default  reduce using rule 38 (exp)
+    $default  reduce using rule 50 (exp)
 
 
 State 88
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   39    | exp MINUS exp •
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    MUL  shift, and go to state 63
-    DIV  shift, and go to state 64
-    REM  shift, and go to state 65
+   39 exp: exp • PLUS exp
+   39    | exp PLUS exp •
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    MUL  shift, and go to state 64
+    DIV  shift, and go to state 65
+    REM  shift, and go to state 66
 
     $default  reduce using rule 39 (exp)
 
 
 State 89
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   40    | exp MUL exp •
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   40    | exp MINUS exp •
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    MUL  shift, and go to state 64
+    DIV  shift, and go to state 65
+    REM  shift, and go to state 66
 
     $default  reduce using rule 40 (exp)
 
 
 State 90
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   41    | exp DIV exp •
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   41    | exp MUL exp •
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     $default  reduce using rule 41 (exp)
 
 
 State 91
 
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   42    | exp REM exp •
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   42    | exp DIV exp •
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
 
     $default  reduce using rule 42 (exp)
 
 
 State 92
 
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   43    | exp REM exp •
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    $default  reduce using rule 43 (exp)
+
+
+State 93
+
    18 args: OPEN_PARENT • param CLOSE_PARENT
    19     | OPEN_PARENT • CLOSE_PARENT
 
-    NAME          shift, and go to state 102
-    CLOSE_PARENT  shift, and go to state 103
+    NAME          shift, and go to state 104
+    CLOSE_PARENT  shift, and go to state 105
 
-    param  go to state 104
+    param  go to state 106
 
 
-State 93
+State 94
 
    16 function: FUN NAME TYPE args • STARTBLOCK funcVars stmt ENDBLOCK
    17         | FUN NAME TYPE args • STARTBLOCK stmt ENDBLOCK
 
-    STARTBLOCK  shift, and go to state 105
+    STARTBLOCK  shift, and go to state 107
 
 
-State 94
+State 95
 
     4 variable: VAR NAME TYPE ASSIGN exp SEMICOLON •
 
     $default  reduce using rule 4 (variable)
 
 
-State 95
+State 96
 
     5 variable: IMPLICIT NAME TYPE ASSIGN exp SEMICOLON •
 
     $default  reduce using rule 5 (variable)
 
 
-State 96
+State 97
 
-   31 funcCallParam: exp COMMA funcCallParam •
+   32 funcCallParam: exp COMMA funcCallParam •
 
-    $default  reduce using rule 31 (funcCallParam)
+    $default  reduce using rule 32 (funcCallParam)
 
 
-State 97
+State 98
 
    11 block: STARTBLOCK • stmt ENDBLOCK
    13      | STARTBLOCK • stmt $end
@@ -1828,68 +1875,83 @@ State 97
     REPEAT  shift, and go to state 13
     RETURN  shift, and go to state 14
 
-    stmt       go to state 106
+    stmt       go to state 108
     statement  go to state 18
     funcCall   go to state 19
 
 
-State 98
+State 99
 
    24 statement: IF OPEN_PARENT exp CLOSE_PARENT block • ELSE block
    25          | IF OPEN_PARENT exp CLOSE_PARENT block •
 
-    ELSE  shift, and go to state 107
+    ELSE  shift, and go to state 109
 
     $default  reduce using rule 25 (statement)
 
 
-State 99
+State 100
 
    12 block: statement •
 
     $default  reduce using rule 12 (block)
 
 
-State 100
+State 101
 
    26 statement: WHILE OPEN_PARENT exp CLOSE_PARENT block • OTHERWISE block
    27          | WHILE OPEN_PARENT exp CLOSE_PARENT block •
 
-    OTHERWISE  shift, and go to state 108
+    OTHERWISE  shift, and go to state 110
 
     $default  reduce using rule 27 (statement)
 
 
-State 101
+State 102
 
    28 statement: REPEAT OPEN_PARENT exp CLOSE_PARENT block •
 
     $default  reduce using rule 28 (statement)
 
 
-State 102
+State 103
+
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY • exp COLON exp
+
+    NAME         shift, and go to state 27
+    INT          shift, and go to state 28
+    STRING       shift, and go to state 29
+    OPEN_PARENT  shift, and go to state 30
+    NOT          shift, and go to state 32
+
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 111
+
+
+State 104
 
    20 param: NAME • TYPE
    21      | NAME • TYPE COMMA param
 
-    TYPE  shift, and go to state 109
+    TYPE  shift, and go to state 112
 
 
-State 103
+State 105
 
    19 args: OPEN_PARENT CLOSE_PARENT •
 
     $default  reduce using rule 19 (args)
 
 
-State 104
+State 106
 
    18 args: OPEN_PARENT param • CLOSE_PARENT
 
-    CLOSE_PARENT  shift, and go to state 110
+    CLOSE_PARENT  shift, and go to state 113
 
 
-State 105
+State 107
 
    16 function: FUN NAME TYPE args STARTBLOCK • funcVars stmt ENDBLOCK
    17         | FUN NAME TYPE args STARTBLOCK • stmt ENDBLOCK
@@ -1898,82 +1960,121 @@ State 105
     IF      shift, and go to state 11
     WHILE   shift, and go to state 12
     REPEAT  shift, and go to state 13
-    VAR     shift, and go to state 111
+    VAR     shift, and go to state 114
     RETURN  shift, and go to state 14
 
-    funcVars   go to state 112
-    funcVar    go to state 113
-    stmt       go to state 114
+    funcVars   go to state 115
+    funcVar    go to state 116
+    stmt       go to state 117
     statement  go to state 18
     funcCall   go to state 19
 
 
-State 106
+State 108
 
    11 block: STARTBLOCK stmt • ENDBLOCK
    13      | STARTBLOCK stmt • $end
 
-    $end      shift, and go to state 115
-    ENDBLOCK  shift, and go to state 116
+    $end      shift, and go to state 118
+    ENDBLOCK  shift, and go to state 119
 
 
-State 107
+State 109
 
    24 statement: IF OPEN_PARENT exp CLOSE_PARENT block ELSE • block
 
     NAME        shift, and go to state 10
-    STARTBLOCK  shift, and go to state 97
+    STARTBLOCK  shift, and go to state 98
     IF          shift, and go to state 11
     WHILE       shift, and go to state 12
     REPEAT      shift, and go to state 13
     RETURN      shift, and go to state 14
 
-    block      go to state 117
-    statement  go to state 99
+    block      go to state 120
+    statement  go to state 100
     funcCall   go to state 19
 
 
-State 108
+State 110
 
    26 statement: WHILE OPEN_PARENT exp CLOSE_PARENT block OTHERWISE • block
 
     NAME        shift, and go to state 10
-    STARTBLOCK  shift, and go to state 97
+    STARTBLOCK  shift, and go to state 98
     IF          shift, and go to state 11
     WHILE       shift, and go to state 12
     REPEAT      shift, and go to state 13
     RETURN      shift, and go to state 14
 
-    block      go to state 118
-    statement  go to state 99
+    block      go to state 121
+    statement  go to state 100
     funcCall   go to state 19
 
 
-State 109
+State 111
+
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY exp • COLON exp
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    COLON  shift, and go to state 122
+    OR     shift, and go to state 51
+    AND    shift, and go to state 52
+    BOR    shift, and go to state 53
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
+
+
+State 112
 
    20 param: NAME TYPE •
    21      | NAME TYPE • COMMA param
 
-    COMMA  shift, and go to state 119
+    COMMA  shift, and go to state 123
 
     $default  reduce using rule 20 (param)
 
 
-State 110
+State 113
 
    18 args: OPEN_PARENT param CLOSE_PARENT •
 
     $default  reduce using rule 18 (args)
 
 
-State 111
+State 114
 
     8 funcVar: VAR • NAME TYPE ASSIGN exp SEMICOLON
 
-    NAME  shift, and go to state 120
+    NAME  shift, and go to state 124
 
 
-State 112
+State 115
 
    16 function: FUN NAME TYPE args STARTBLOCK funcVars • stmt ENDBLOCK
 
@@ -1983,118 +2084,173 @@ State 112
     REPEAT  shift, and go to state 13
     RETURN  shift, and go to state 14
 
-    stmt       go to state 121
+    stmt       go to state 125
     statement  go to state 18
     funcCall   go to state 19
 
 
-State 113
+State 116
 
     6 funcVars: funcVar • funcVars
     7         | funcVar •
 
-    VAR  shift, and go to state 111
+    VAR  shift, and go to state 114
 
     $default  reduce using rule 7 (funcVars)
 
-    funcVars  go to state 122
-    funcVar   go to state 113
+    funcVars  go to state 126
+    funcVar   go to state 116
 
 
-State 114
+State 117
 
    17 function: FUN NAME TYPE args STARTBLOCK stmt • ENDBLOCK
 
-    ENDBLOCK  shift, and go to state 123
+    ENDBLOCK  shift, and go to state 127
 
 
-State 115
+State 118
 
    13 block: STARTBLOCK stmt $end •
 
     $default  reduce using rule 13 (block)
 
 
-State 116
+State 119
 
    11 block: STARTBLOCK stmt ENDBLOCK •
 
     $default  reduce using rule 11 (block)
 
 
-State 117
+State 120
 
    24 statement: IF OPEN_PARENT exp CLOSE_PARENT block ELSE block •
 
     $default  reduce using rule 24 (statement)
 
 
-State 118
+State 121
 
    26 statement: WHILE OPEN_PARENT exp CLOSE_PARENT block OTHERWISE block •
 
     $default  reduce using rule 26 (statement)
 
 
-State 119
+State 122
+
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY exp COLON • exp
+
+    NAME         shift, and go to state 27
+    INT          shift, and go to state 28
+    STRING       shift, and go to state 29
+    OPEN_PARENT  shift, and go to state 30
+    NOT          shift, and go to state 32
+
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 128
+
+
+State 123
 
    21 param: NAME TYPE COMMA • param
 
-    NAME  shift, and go to state 102
+    NAME  shift, and go to state 104
 
-    param  go to state 124
+    param  go to state 129
 
 
-State 120
+State 124
 
     8 funcVar: VAR NAME • TYPE ASSIGN exp SEMICOLON
 
-    TYPE  shift, and go to state 125
+    TYPE  shift, and go to state 130
 
 
-State 121
+State 125
 
    16 function: FUN NAME TYPE args STARTBLOCK funcVars stmt • ENDBLOCK
 
-    ENDBLOCK  shift, and go to state 126
+    ENDBLOCK  shift, and go to state 131
 
 
-State 122
+State 126
 
     6 funcVars: funcVar funcVars •
 
     $default  reduce using rule 6 (funcVars)
 
 
-State 123
+State 127
 
    17 function: FUN NAME TYPE args STARTBLOCK stmt ENDBLOCK •
 
     $default  reduce using rule 17 (function)
 
 
-State 124
+State 128
+
+   31 ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY exp COLON exp •
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    OR     shift, and go to state 51
+    AND    shift, and go to state 52
+    BOR    shift, and go to state 53
+    XOR    shift, and go to state 54
+    BAND   shift, and go to state 55
+    EQ     shift, and go to state 56
+    NE     shift, and go to state 57
+    LT     shift, and go to state 58
+    LE     shift, and go to state 59
+    GT     shift, and go to state 60
+    GE     shift, and go to state 61
+    PLUS   shift, and go to state 62
+    MINUS  shift, and go to state 63
+    MUL    shift, and go to state 64
+    DIV    shift, and go to state 65
+    REM    shift, and go to state 66
+
+    $default  reduce using rule 31 (ternaryEXP)
+
+
+State 129
 
    21 param: NAME TYPE COMMA param •
 
     $default  reduce using rule 21 (param)
 
 
-State 125
+State 130
 
     8 funcVar: VAR NAME TYPE • ASSIGN exp SEMICOLON
 
-    ASSIGN  shift, and go to state 127
+    ASSIGN  shift, and go to state 132
 
 
-State 126
+State 131
 
    16 function: FUN NAME TYPE args STARTBLOCK funcVars stmt ENDBLOCK •
 
     $default  reduce using rule 16 (function)
 
 
-State 127
+State 132
 
     8 funcVar: VAR NAME TYPE ASSIGN • exp SEMICOLON
 
@@ -2104,50 +2260,51 @@ State 127
     OPEN_PARENT  shift, and go to state 30
     NOT          shift, and go to state 32
 
-    funcCall  go to state 33
-    exp       go to state 128
+    ternaryEXP  go to state 33
+    funcCall    go to state 34
+    exp         go to state 133
 
 
-State 128
+State 133
 
     8 funcVar: VAR NAME TYPE ASSIGN exp • SEMICOLON
-   38 exp: exp • PLUS exp
-   39    | exp • MINUS exp
-   40    | exp • MUL exp
-   41    | exp • DIV exp
-   42    | exp • REM exp
-   43    | exp • BOR exp
-   44    | exp • BAND exp
-   45    | exp • XOR exp
-   46    | exp • LT exp
-   47    | exp • LE exp
-   48    | exp • GT exp
-   49    | exp • GE exp
-   50    | exp • OR exp
-   51    | exp • AND exp
-   53    | exp • EQ exp
-   54    | exp • NE exp
-
-    SEMICOLON  shift, and go to state 129
-    OR         shift, and go to state 50
-    AND        shift, and go to state 51
-    BOR        shift, and go to state 52
-    XOR        shift, and go to state 53
-    BAND       shift, and go to state 54
-    EQ         shift, and go to state 55
-    NE         shift, and go to state 56
-    LT         shift, and go to state 57
-    LE         shift, and go to state 58
-    GT         shift, and go to state 59
-    GE         shift, and go to state 60
-    PLUS       shift, and go to state 61
-    MINUS      shift, and go to state 62
-    MUL        shift, and go to state 63
-    DIV        shift, and go to state 64
-    REM        shift, and go to state 65
-
-
-State 129
+   39 exp: exp • PLUS exp
+   40    | exp • MINUS exp
+   41    | exp • MUL exp
+   42    | exp • DIV exp
+   43    | exp • REM exp
+   44    | exp • BOR exp
+   45    | exp • BAND exp
+   46    | exp • XOR exp
+   47    | exp • LT exp
+   48    | exp • LE exp
+   49    | exp • GT exp
+   50    | exp • GE exp
+   51    | exp • OR exp
+   52    | exp • AND exp
+   54    | exp • EQ exp
+   55    | exp • NE exp
+
+    SEMICOLON  shift, and go to state 134
+    OR         shift, and go to state 51
+    AND        shift, and go to state 52
+    BOR        shift, and go to state 53
+    XOR        shift, and go to state 54
+    BAND       shift, and go to state 55
+    EQ         shift, and go to state 56
+    NE         shift, and go to state 57
+    LT         shift, and go to state 58
+    LE         shift, and go to state 59
+    GT         shift, and go to state 60
+    GE         shift, and go to state 61
+    PLUS       shift, and go to state 62
+    MINUS      shift, and go to state 63
+    MUL        shift, and go to state 64
+    DIV        shift, and go to state 65
+    REM        shift, and go to state 66
+
+
+State 134
 
     8 funcVar: VAR NAME TYPE ASSIGN exp SEMICOLON •
 
diff --git a/y.tab.c b/y.tab.c
index e5a89cd..7356e80 100644
--- a/y.tab.c
+++ b/y.tab.c
@@ -154,40 +154,42 @@ extern int yydebug;
     INT = 259,                     /* INT  */
     STRING = 260,                  /* STRING  */
     TYPE = 261,                    /* TYPE  */
-    INBLOCK = 262,                 /* INBLOCK  */
-    ENDBLOCK = 263,                /* ENDBLOCK  */
-    STARTBLOCK = 264,              /* STARTBLOCK  */
-    COMMA = 265,                   /* COMMA  */
-    IF = 266,                      /* IF  */
-    WHILE = 267,                   /* WHILE  */
-    REPEAT = 268,                  /* REPEAT  */
-    ELSE = 269,                    /* ELSE  */
-    OTHERWISE = 270,               /* OTHERWISE  */
-    VAR = 271,                     /* VAR  */
-    IMPLICIT = 272,                /* IMPLICIT  */
-    RETURN = 273,                  /* RETURN  */
-    FUN = 274,                     /* FUN  */
-    OPEN_PARENT = 275,             /* OPEN_PARENT  */
-    CLOSE_PARENT = 276,            /* CLOSE_PARENT  */
-    SEMICOLON = 277,               /* SEMICOLON  */
-    ASSIGN = 278,                  /* ASSIGN  */
-    OR = 279,                      /* OR  */
-    AND = 280,                     /* AND  */
-    BOR = 281,                     /* BOR  */
-    XOR = 282,                     /* XOR  */
-    BAND = 283,                    /* BAND  */
-    EQ = 284,                      /* EQ  */
-    NE = 285,                      /* NE  */
-    LT = 286,                      /* LT  */
-    LE = 287,                      /* LE  */
-    GT = 288,                      /* GT  */
-    GE = 289,                      /* GE  */
-    PLUS = 290,                    /* PLUS  */
-    MINUS = 291,                   /* MINUS  */
-    MUL = 292,                     /* MUL  */
-    DIV = 293,                     /* DIV  */
-    REM = 294,                     /* REM  */
-    NOT = 295                      /* NOT  */
+    TERNARY = 262,                 /* TERNARY  */
+    COLON = 263,                   /* COLON  */
+    INBLOCK = 264,                 /* INBLOCK  */
+    ENDBLOCK = 265,                /* ENDBLOCK  */
+    STARTBLOCK = 266,              /* STARTBLOCK  */
+    COMMA = 267,                   /* COMMA  */
+    IF = 268,                      /* IF  */
+    WHILE = 269,                   /* WHILE  */
+    REPEAT = 270,                  /* REPEAT  */
+    ELSE = 271,                    /* ELSE  */
+    OTHERWISE = 272,               /* OTHERWISE  */
+    VAR = 273,                     /* VAR  */
+    IMPLICIT = 274,                /* IMPLICIT  */
+    RETURN = 275,                  /* RETURN  */
+    FUN = 276,                     /* FUN  */
+    OPEN_PARENT = 277,             /* OPEN_PARENT  */
+    CLOSE_PARENT = 278,            /* CLOSE_PARENT  */
+    SEMICOLON = 279,               /* SEMICOLON  */
+    ASSIGN = 280,                  /* ASSIGN  */
+    OR = 281,                      /* OR  */
+    AND = 282,                     /* AND  */
+    BOR = 283,                     /* BOR  */
+    XOR = 284,                     /* XOR  */
+    BAND = 285,                    /* BAND  */
+    EQ = 286,                      /* EQ  */
+    NE = 287,                      /* NE  */
+    LT = 288,                      /* LT  */
+    LE = 289,                      /* LE  */
+    GT = 290,                      /* GT  */
+    GE = 291,                      /* GE  */
+    PLUS = 292,                    /* PLUS  */
+    MINUS = 293,                   /* MINUS  */
+    MUL = 294,                     /* MUL  */
+    DIV = 295,                     /* DIV  */
+    REM = 296,                     /* REM  */
+    NOT = 297                      /* NOT  */
   };
   typedef enum yytokentype yytoken_kind_t;
 #endif
@@ -200,40 +202,42 @@ extern int yydebug;
 #define INT 259
 #define STRING 260
 #define TYPE 261
-#define INBLOCK 262
-#define ENDBLOCK 263
-#define STARTBLOCK 264
-#define COMMA 265
-#define IF 266
-#define WHILE 267
-#define REPEAT 268
-#define ELSE 269
-#define OTHERWISE 270
-#define VAR 271
-#define IMPLICIT 272
-#define RETURN 273
-#define FUN 274
-#define OPEN_PARENT 275
-#define CLOSE_PARENT 276
-#define SEMICOLON 277
-#define ASSIGN 278
-#define OR 279
-#define AND 280
-#define BOR 281
-#define XOR 282
-#define BAND 283
-#define EQ 284
-#define NE 285
-#define LT 286
-#define LE 287
-#define GT 288
-#define GE 289
-#define PLUS 290
-#define MINUS 291
-#define MUL 292
-#define DIV 293
-#define REM 294
-#define NOT 295
+#define TERNARY 262
+#define COLON 263
+#define INBLOCK 264
+#define ENDBLOCK 265
+#define STARTBLOCK 266
+#define COMMA 267
+#define IF 268
+#define WHILE 269
+#define REPEAT 270
+#define ELSE 271
+#define OTHERWISE 272
+#define VAR 273
+#define IMPLICIT 274
+#define RETURN 275
+#define FUN 276
+#define OPEN_PARENT 277
+#define CLOSE_PARENT 278
+#define SEMICOLON 279
+#define ASSIGN 280
+#define OR 281
+#define AND 282
+#define BOR 283
+#define XOR 284
+#define BAND 285
+#define EQ 286
+#define NE 287
+#define LT 288
+#define LE 289
+#define GT 290
+#define GE 291
+#define PLUS 292
+#define MINUS 293
+#define MUL 294
+#define DIV 295
+#define REM 296
+#define NOT 297
 
 /* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
@@ -260,7 +264,7 @@ union YYSTYPE
     list * param;
 	
 
-#line 264 "y.tab.c"
+#line 268 "y.tab.c"
 
 };
 typedef union YYSTYPE YYSTYPE;
@@ -287,56 +291,59 @@ enum yysymbol_kind_t
   YYSYMBOL_INT = 4,                        /* INT  */
   YYSYMBOL_STRING = 5,                     /* STRING  */
   YYSYMBOL_TYPE = 6,                       /* TYPE  */
-  YYSYMBOL_INBLOCK = 7,                    /* INBLOCK  */
-  YYSYMBOL_ENDBLOCK = 8,                   /* ENDBLOCK  */
-  YYSYMBOL_STARTBLOCK = 9,                 /* STARTBLOCK  */
-  YYSYMBOL_COMMA = 10,                     /* COMMA  */
-  YYSYMBOL_IF = 11,                        /* IF  */
-  YYSYMBOL_WHILE = 12,                     /* WHILE  */
-  YYSYMBOL_REPEAT = 13,                    /* REPEAT  */
-  YYSYMBOL_ELSE = 14,                      /* ELSE  */
-  YYSYMBOL_OTHERWISE = 15,                 /* OTHERWISE  */
-  YYSYMBOL_VAR = 16,                       /* VAR  */
-  YYSYMBOL_IMPLICIT = 17,                  /* IMPLICIT  */
-  YYSYMBOL_RETURN = 18,                    /* RETURN  */
-  YYSYMBOL_FUN = 19,                       /* FUN  */
-  YYSYMBOL_OPEN_PARENT = 20,               /* OPEN_PARENT  */
-  YYSYMBOL_CLOSE_PARENT = 21,              /* CLOSE_PARENT  */
-  YYSYMBOL_SEMICOLON = 22,                 /* SEMICOLON  */
-  YYSYMBOL_ASSIGN = 23,                    /* ASSIGN  */
-  YYSYMBOL_OR = 24,                        /* OR  */
-  YYSYMBOL_AND = 25,                       /* AND  */
-  YYSYMBOL_BOR = 26,                       /* BOR  */
-  YYSYMBOL_XOR = 27,                       /* XOR  */
-  YYSYMBOL_BAND = 28,                      /* BAND  */
-  YYSYMBOL_EQ = 29,                        /* EQ  */
-  YYSYMBOL_NE = 30,                        /* NE  */
-  YYSYMBOL_LT = 31,                        /* LT  */
-  YYSYMBOL_LE = 32,                        /* LE  */
-  YYSYMBOL_GT = 33,                        /* GT  */
-  YYSYMBOL_GE = 34,                        /* GE  */
-  YYSYMBOL_PLUS = 35,                      /* PLUS  */
-  YYSYMBOL_MINUS = 36,                     /* MINUS  */
-  YYSYMBOL_MUL = 37,                       /* MUL  */
-  YYSYMBOL_DIV = 38,                       /* DIV  */
-  YYSYMBOL_REM = 39,                       /* REM  */
-  YYSYMBOL_NOT = 40,                       /* NOT  */
-  YYSYMBOL_YYACCEPT = 41,                  /* $accept  */
-  YYSYMBOL_program = 42,                   /* program  */
-  YYSYMBOL_variables = 43,                 /* variables  */
-  YYSYMBOL_variable = 44,                  /* variable  */
-  YYSYMBOL_funcVars = 45,                  /* funcVars  */
-  YYSYMBOL_funcVar = 46,                   /* funcVar  */
-  YYSYMBOL_stmt = 47,                      /* stmt  */
-  YYSYMBOL_block = 48,                     /* block  */
-  YYSYMBOL_functions = 49,                 /* functions  */
-  YYSYMBOL_function = 50,                  /* function  */
-  YYSYMBOL_args = 51,                      /* args  */
-  YYSYMBOL_param = 52,                     /* param  */
-  YYSYMBOL_statement = 53,                 /* statement  */
-  YYSYMBOL_funcCallParam = 54,             /* funcCallParam  */
-  YYSYMBOL_funcCall = 55,                  /* funcCall  */
-  YYSYMBOL_exp = 56                        /* exp  */
+  YYSYMBOL_TERNARY = 7,                    /* TERNARY  */
+  YYSYMBOL_COLON = 8,                      /* COLON  */
+  YYSYMBOL_INBLOCK = 9,                    /* INBLOCK  */
+  YYSYMBOL_ENDBLOCK = 10,                  /* ENDBLOCK  */
+  YYSYMBOL_STARTBLOCK = 11,                /* STARTBLOCK  */
+  YYSYMBOL_COMMA = 12,                     /* COMMA  */
+  YYSYMBOL_IF = 13,                        /* IF  */
+  YYSYMBOL_WHILE = 14,                     /* WHILE  */
+  YYSYMBOL_REPEAT = 15,                    /* REPEAT  */
+  YYSYMBOL_ELSE = 16,                      /* ELSE  */
+  YYSYMBOL_OTHERWISE = 17,                 /* OTHERWISE  */
+  YYSYMBOL_VAR = 18,                       /* VAR  */
+  YYSYMBOL_IMPLICIT = 19,                  /* IMPLICIT  */
+  YYSYMBOL_RETURN = 20,                    /* RETURN  */
+  YYSYMBOL_FUN = 21,                       /* FUN  */
+  YYSYMBOL_OPEN_PARENT = 22,               /* OPEN_PARENT  */
+  YYSYMBOL_CLOSE_PARENT = 23,              /* CLOSE_PARENT  */
+  YYSYMBOL_SEMICOLON = 24,                 /* SEMICOLON  */
+  YYSYMBOL_ASSIGN = 25,                    /* ASSIGN  */
+  YYSYMBOL_OR = 26,                        /* OR  */
+  YYSYMBOL_AND = 27,                       /* AND  */
+  YYSYMBOL_BOR = 28,                       /* BOR  */
+  YYSYMBOL_XOR = 29,                       /* XOR  */
+  YYSYMBOL_BAND = 30,                      /* BAND  */
+  YYSYMBOL_EQ = 31,                        /* EQ  */
+  YYSYMBOL_NE = 32,                        /* NE  */
+  YYSYMBOL_LT = 33,                        /* LT  */
+  YYSYMBOL_LE = 34,                        /* LE  */
+  YYSYMBOL_GT = 35,                        /* GT  */
+  YYSYMBOL_GE = 36,                        /* GE  */
+  YYSYMBOL_PLUS = 37,                      /* PLUS  */
+  YYSYMBOL_MINUS = 38,                     /* MINUS  */
+  YYSYMBOL_MUL = 39,                       /* MUL  */
+  YYSYMBOL_DIV = 40,                       /* DIV  */
+  YYSYMBOL_REM = 41,                       /* REM  */
+  YYSYMBOL_NOT = 42,                       /* NOT  */
+  YYSYMBOL_YYACCEPT = 43,                  /* $accept  */
+  YYSYMBOL_program = 44,                   /* program  */
+  YYSYMBOL_variables = 45,                 /* variables  */
+  YYSYMBOL_variable = 46,                  /* variable  */
+  YYSYMBOL_funcVars = 47,                  /* funcVars  */
+  YYSYMBOL_funcVar = 48,                   /* funcVar  */
+  YYSYMBOL_stmt = 49,                      /* stmt  */
+  YYSYMBOL_block = 50,                     /* block  */
+  YYSYMBOL_functions = 51,                 /* functions  */
+  YYSYMBOL_function = 52,                  /* function  */
+  YYSYMBOL_args = 53,                      /* args  */
+  YYSYMBOL_param = 54,                     /* param  */
+  YYSYMBOL_statement = 55,                 /* statement  */
+  YYSYMBOL_ternaryEXP = 56,                /* ternaryEXP  */
+  YYSYMBOL_funcCallParam = 57,             /* funcCallParam  */
+  YYSYMBOL_funcCall = 58,                  /* funcCall  */
+  YYSYMBOL_exp = 59                        /* exp  */
 };
 typedef enum yysymbol_kind_t yysymbol_kind_t;
 
@@ -664,19 +671,19 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   400
+#define YYLAST   441
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  41
+#define YYNTOKENS  43
 /* YYNNTS -- Number of nonterminals.  */
-#define YYNNTS  16
+#define YYNNTS  17
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  57
+#define YYNRULES  59
 /* YYNSTATES -- Number of states.  */
-#define YYNSTATES  130
+#define YYNSTATES  135
 
 /* YYMAXUTOK -- Last valid token kind.  */
-#define YYMAXUTOK   295
+#define YYMAXUTOK   297
 
 
 /* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
@@ -719,19 +726,19 @@ static const yytype_int8 yytranslate[] =
        5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
-      35,    36,    37,    38,    39,    40
+      35,    36,    37,    38,    39,    40,    41,    42
 };
 
 #if YYDEBUG
 /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_uint8 yyrline[] =
 {
-       0,   114,   114,   120,   121,   124,   125,   128,   129,   131,
-     137,   138,   141,   142,   143,   145,   146,   149,   150,   153,
-     154,   156,   157,   162,   163,   164,   165,   166,   167,   168,
-     169,   170,   178,   179,   181,   182,   185,   186,   187,   188,
-     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
-     199,   200,   201,   202,   203,   204,   205,   206
+       0,   116,   116,   122,   123,   126,   127,   130,   131,   133,
+     139,   140,   143,   144,   145,   147,   148,   151,   152,   155,
+     156,   158,   159,   164,   165,   166,   167,   168,   169,   170,
+     171,   172,   179,   181,   182,   184,   185,   188,   189,   190,
+     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
+     201,   202,   203,   204,   205,   206,   207,   208,   209,   210
 };
 #endif
 
@@ -748,14 +755,14 @@ static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;
 static const char *const yytname[] =
 {
   "\"end of file\"", "error", "\"invalid token\"", "NAME", "INT",
-  "STRING", "TYPE", "INBLOCK", "ENDBLOCK", "STARTBLOCK", "COMMA", "IF",
-  "WHILE", "REPEAT", "ELSE", "OTHERWISE", "VAR", "IMPLICIT", "RETURN",
-  "FUN", "OPEN_PARENT", "CLOSE_PARENT", "SEMICOLON", "ASSIGN", "OR", "AND",
-  "BOR", "XOR", "BAND", "EQ", "NE", "LT", "LE", "GT", "GE", "PLUS",
-  "MINUS", "MUL", "DIV", "REM", "NOT", "$accept", "program", "variables",
-  "variable", "funcVars", "funcVar", "stmt", "block", "functions",
-  "function", "args", "param", "statement", "funcCallParam", "funcCall",
-  "exp", YY_NULLPTR
+  "STRING", "TYPE", "TERNARY", "COLON", "INBLOCK", "ENDBLOCK",
+  "STARTBLOCK", "COMMA", "IF", "WHILE", "REPEAT", "ELSE", "OTHERWISE",
+  "VAR", "IMPLICIT", "RETURN", "FUN", "OPEN_PARENT", "CLOSE_PARENT",
+  "SEMICOLON", "ASSIGN", "OR", "AND", "BOR", "XOR", "BAND", "EQ", "NE",
+  "LT", "LE", "GT", "GE", "PLUS", "MINUS", "MUL", "DIV", "REM", "NOT",
+  "$accept", "program", "variables", "variable", "funcVars", "funcVar",
+  "stmt", "block", "functions", "function", "args", "param", "statement",
+  "ternaryEXP", "funcCallParam", "funcCall", "exp", YY_NULLPTR
 };
 
 static const char *
@@ -765,7 +772,7 @@ yysymbol_name (yysymbol_kind_t yysymbol)
 }
 #endif
 
-#define YYPACT_NINF (-46)
+#define YYPACT_NINF (-47)
 
 #define yypact_value_is_default(Yyn) \
   ((Yyn) == YYPACT_NINF)
@@ -779,19 +786,20 @@ yysymbol_name (yysymbol_kind_t yysymbol)
    STATE-NUM.  */
 static const yytype_int16 yypact[] =
 {
-     -46,     5,     3,   -46,    12,    14,   -46,    86,     2,    16,
-     -16,    32,    51,    55,    50,    20,   -46,   -46,   308,     4,
-       9,    43,    53,    56,    56,    56,    56,    57,   -46,   -46,
-      56,   -46,    56,   -46,   185,    72,   -46,   -46,    56,    56,
-     -46,    58,    91,   203,   110,   129,   148,   167,   -46,   -46,
-      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
-      56,    56,    56,    56,    56,    56,    66,   221,   239,   -46,
-      56,   -46,   294,   294,   294,   -46,   302,   316,   329,   341,
-     352,   361,   361,    46,    46,    46,    46,    -4,    -4,   -46,
-     -46,   -46,     0,    78,   -46,   -46,   -46,   308,    77,   -46,
-      79,   -46,   100,   -46,    87,   297,     6,   294,   294,    99,
-     -46,   107,   308,    95,   104,   -46,   -46,   -46,   -46,   111,
-     126,   125,   -46,   -46,   -46,   128,   -46,    56,   257,   -46
+     -47,     8,     2,   -47,    12,    14,   -47,    71,    18,    26,
+      -3,    11,    32,    37,    31,    64,   -47,   -47,   344,    47,
+      52,    55,    53,    57,    57,    57,    57,    50,   -47,   -47,
+      57,   -47,    57,   -47,   -47,   217,    72,   -47,   -47,    57,
+      57,   -47,    59,   123,   235,   142,   161,   180,   199,   -47,
+     -47,    57,    57,    57,    57,    57,    57,    57,    57,    57,
+      57,    57,    57,    57,    57,    57,    57,    61,   253,   271,
+     -47,    57,   -47,   328,   328,   328,    80,   354,   368,   107,
+     380,   391,   400,   400,    74,    74,    74,    74,   -34,   -34,
+     -47,   -47,   -47,     0,    77,   -47,   -47,   -47,   344,    78,
+     -47,    79,   -47,    57,    91,   -47,    83,   331,     4,   328,
+     328,    93,    88,   -47,   100,   344,    89,    99,   -47,   -47,
+     -47,   -47,    57,   113,   111,   156,   -47,   -47,   339,   -47,
+     160,   -47,    57,   289,   -47
 };
 
 /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
@@ -801,31 +809,32 @@ static const yytype_int8 yydefact[] =
 {
        3,     0,    15,     1,     0,     0,     4,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     2,    16,    10,     0,
-       0,     0,     0,     0,     0,     0,     0,    56,    36,    37,
-       0,    24,     0,    57,     0,     0,    11,    31,     0,     0,
-      34,     0,    33,     0,     0,     0,     0,     0,    53,    23,
+       0,     0,     0,     0,     0,     0,     0,    57,    37,    38,
+       0,    24,     0,    59,    58,     0,     0,    11,    31,     0,
+       0,    35,     0,    34,     0,     0,     0,     0,     0,    54,
+      23,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
-       0,    30,     0,     0,     0,    38,    51,    52,    44,    46,
-      45,    54,    55,    47,    48,    49,    50,    39,    40,    41,
-      42,    43,     0,     0,     5,     6,    32,     0,    26,    13,
-      28,    29,     0,    20,     0,     0,     0,     0,     0,    21,
-      19,     0,     0,     8,     0,    14,    12,    25,    27,     0,
-       0,     0,     7,    18,    22,     0,    17,     0,     0,     9
+      36,     0,    30,     0,     0,     0,    39,    52,    53,    45,
+      47,    46,    55,    56,    48,    49,    50,    51,    40,    41,
+      42,    43,    44,     0,     0,     5,     6,    33,     0,    26,
+      13,    28,    29,     0,     0,    20,     0,     0,     0,     0,
+       0,     0,    21,    19,     0,     0,     8,     0,    14,    12,
+      25,    27,     0,     0,     0,     0,     7,    18,    32,    22,
+       0,    17,     0,     0,     9
 };
 
 /* YYPGOTO[NTERM-NUM].  */
-static const yytype_int8 yypgoto[] =
+static const yytype_int16 yypgoto[] =
 {
-     -46,   -46,   -46,   -46,    39,   -46,   -17,   -43,   -46,   -46,
-     -46,    52,   -45,   119,    -5,   -14
+     -47,   -47,   -47,   -47,    51,   -47,   -17,   -44,   -47,   -47,
+     -47,    63,   -46,   -47,   133,    -5,   -14
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int8 yydefgoto[] =
 {
-       0,     1,     2,     6,   112,   113,    16,    98,     7,    17,
-      93,   104,    18,    41,    33,    42
+       0,     1,     2,     6,   115,   116,    16,    99,     7,    17,
+      94,   106,    18,    33,    42,    34,    43
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
@@ -833,122 +842,131 @@ static const yytype_int8 yydefgoto[] =
    number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_uint8 yytable[] =
 {
-      34,    36,    19,   102,    22,     3,   115,    23,    20,    43,
-      44,    45,    46,    19,   116,     8,    47,     9,    48,     4,
-       5,   103,    21,    35,    67,    68,    37,    99,    99,    99,
-     100,   101,    38,    63,    64,    65,    76,    77,    78,    79,
+      35,    37,    19,   104,   118,    64,    65,    66,     3,    44,
+      45,    46,    47,    19,   119,     8,    48,     9,    49,    22,
+       4,     5,    23,   105,    20,    68,    69,   100,   100,   100,
+     101,   102,    21,    24,    27,    28,    29,    77,    78,    79,
       80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
-      90,    91,    24,    27,    28,    29,    27,    28,    29,    27,
-      28,    29,    99,    99,   117,   118,    39,    19,    19,    19,
-      30,    25,    31,    30,    40,    26,    30,    22,    66,    69,
-     106,    61,    62,    63,    64,    65,    92,   105,   114,    10,
-      32,   107,    19,    32,   108,   121,    32,    11,    12,    13,
-      19,    70,    19,    19,    14,    15,   109,    19,   110,   119,
-     120,   111,   123,   128,   102,    50,    51,    52,    53,    54,
-      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
-      65,    72,   125,   126,    50,    51,    52,    53,    54,    55,
-      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
-      73,   127,   122,    50,    51,    52,    53,    54,    55,    56,
-      57,    58,    59,    60,    61,    62,    63,    64,    65,    74,
-       0,   124,    50,    51,    52,    53,    54,    55,    56,    57,
-      58,    59,    60,    61,    62,    63,    64,    65,    75,    96,
-       0,    50,    51,    52,    53,    54,    55,    56,    57,    58,
-      59,    60,    61,    62,    63,    64,    65,    49,     0,    50,
-      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
-      61,    62,    63,    64,    65,    71,     0,    50,    51,    52,
+      90,    91,    92,    30,    25,    31,    27,    28,    29,    26,
+      27,    28,    29,   100,   100,   120,   121,    36,    19,    19,
+      19,    38,    22,    32,    10,    30,    41,    39,    67,    30,
+      40,   108,    70,    93,    11,    12,    13,   103,   107,   111,
+     117,    14,    15,    19,   109,    32,   110,   112,   125,    32,
+     123,   122,    19,   124,    19,    19,   113,   114,   128,   127,
+      19,    62,    63,    64,    65,    66,   104,   130,   133,    51,
+      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
+      62,    63,    64,    65,    66,    71,    54,    55,    56,    57,
+      58,    59,    60,    61,    62,    63,    64,    65,    66,    51,
+      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
+      62,    63,    64,    65,    66,    73,   131,   126,    51,    52,
       53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
-      63,    64,    65,    94,     0,    50,    51,    52,    53,    54,
+      63,    64,    65,    66,    74,   132,   129,    51,    52,    53,
+      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
+      64,    65,    66,    75,    97,     0,    51,    52,    53,    54,
       55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
-      65,    95,     0,    50,    51,    52,    53,    54,    55,    56,
-      57,    58,    59,    60,    61,    62,    63,    64,    65,   129,
-       0,    50,    51,    52,    53,    54,    55,    56,    57,    58,
-      59,    60,    61,    62,    63,    64,    65,    10,     0,     0,
-      10,     0,     0,    97,     0,    11,    12,    13,    11,    12,
-      13,    10,    14,   111,     0,    14,     0,     0,     0,    11,
-      12,    13,     0,     0,     0,     0,    14,    51,    52,    53,
+      65,    66,    76,     0,     0,    51,    52,    53,    54,    55,
+      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
+      66,    50,     0,    51,    52,    53,    54,    55,    56,    57,
+      58,    59,    60,    61,    62,    63,    64,    65,    66,    72,
+       0,    51,    52,    53,    54,    55,    56,    57,    58,    59,
+      60,    61,    62,    63,    64,    65,    66,    95,     0,    51,
+      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
+      62,    63,    64,    65,    66,    96,     0,    51,    52,    53,
       54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
-      64,    65,    52,    53,    54,    55,    56,    57,    58,    59,
-      60,    61,    62,    63,    64,    65,    53,    54,    55,    56,
-      57,    58,    59,    60,    61,    62,    63,    64,    65,    54,
+      64,    65,    66,   134,     0,    51,    52,    53,    54,    55,
+      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
+      66,    10,     0,     0,    10,     0,     0,     0,     0,    98,
+       0,    11,    12,    13,    11,    12,    13,    10,    14,   114,
+       0,    14,     0,     0,     0,     0,     0,    11,    12,    13,
+       0,     0,     0,     0,    14,    51,    52,    53,    54,    55,
+      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
+      66,    52,    53,    54,    55,    56,    57,    58,    59,    60,
+      61,    62,    63,    64,    65,    66,    53,    54,    55,    56,
+      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
       55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
-      65,    55,    56,    57,    58,    59,    60,    61,    62,    63,
-      64,    65,    57,    58,    59,    60,    61,    62,    63,    64,
-      65
+      65,    66,    56,    57,    58,    59,    60,    61,    62,    63,
+      64,    65,    66,    58,    59,    60,    61,    62,    63,    64,
+      65,    66
 };
 
-static const yytype_int8 yycheck[] =
+static const yytype_int16 yycheck[] =
 {
-      14,    18,     7,     3,    20,     0,     0,    23,     6,    23,
-      24,    25,    26,    18,     8,     3,    30,     3,    32,    16,
-      17,    21,     6,     3,    38,    39,    22,    72,    73,    74,
-      73,    74,    23,    37,    38,    39,    50,    51,    52,    53,
+      14,    18,     7,     3,     0,    39,    40,    41,     0,    23,
+      24,    25,    26,    18,    10,     3,    30,     3,    32,    22,
+      18,    19,    25,    23,     6,    39,    40,    73,    74,    75,
+      74,    75,     6,    22,     3,     4,     5,    51,    52,    53,
       54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
-      64,    65,    20,     3,     4,     5,     3,     4,     5,     3,
-       4,     5,   107,   108,   107,   108,    23,    72,    73,    74,
-      20,    20,    22,    20,    21,    20,    20,    20,     6,    21,
-      97,    35,    36,    37,    38,    39,    20,     9,   105,     3,
-      40,    14,    97,    40,    15,   112,    40,    11,    12,    13,
-     105,    10,   107,   108,    18,    19,     6,   112,    21,    10,
-       3,    16,     8,   127,     3,    24,    25,    26,    27,    28,
+      64,    65,    66,    22,    22,    24,     3,     4,     5,    22,
+       3,     4,     5,   109,   110,   109,   110,     3,    73,    74,
+      75,    24,    22,    42,     3,    22,    23,    25,     6,    22,
+      25,    98,    23,    22,    13,    14,    15,     7,    11,   103,
+     107,    20,    21,    98,    16,    42,    17,     6,   115,    42,
+      12,     8,   107,     3,   109,   110,    23,    18,   122,    10,
+     115,    37,    38,    39,    40,    41,     3,     6,   132,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
+      37,    38,    39,    40,    41,    12,    29,    30,    31,    32,
+      33,    34,    35,    36,    37,    38,    39,    40,    41,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
+      37,    38,    39,    40,    41,    23,    10,   116,    26,    27,
+      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
+      38,    39,    40,    41,    23,    25,   123,    26,    27,    28,
       29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
-      39,    21,     6,     8,    24,    25,    26,    27,    28,    29,
+      39,    40,    41,    23,    71,    -1,    26,    27,    28,    29,
       30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
-      21,    23,   113,    24,    25,    26,    27,    28,    29,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    21,
-      -1,   119,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    35,    36,    37,    38,    39,    21,    70,
-      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
-      33,    34,    35,    36,    37,    38,    39,    22,    -1,    24,
-      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
-      35,    36,    37,    38,    39,    22,    -1,    24,    25,    26,
+      40,    41,    23,    -1,    -1,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
+      41,    24,    -1,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    35,    36,    37,    38,    39,    40,    41,    24,
+      -1,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    24,    -1,    26,
       27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
-      37,    38,    39,    22,    -1,    24,    25,    26,    27,    28,
+      37,    38,    39,    40,    41,    24,    -1,    26,    27,    28,
       29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
-      39,    22,    -1,    24,    25,    26,    27,    28,    29,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    22,
-      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
-      33,    34,    35,    36,    37,    38,    39,     3,    -1,    -1,
-       3,    -1,    -1,     9,    -1,    11,    12,    13,    11,    12,
-      13,     3,    18,    16,    -1,    18,    -1,    -1,    -1,    11,
-      12,    13,    -1,    -1,    -1,    -1,    18,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
-      38,    39,    26,    27,    28,    29,    30,    31,    32,    33,
-      34,    35,    36,    37,    38,    39,    27,    28,    29,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    28,
-      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
-      39,    29,    30,    31,    32,    33,    34,    35,    36,    37,
-      38,    39,    31,    32,    33,    34,    35,    36,    37,    38,
-      39
+      39,    40,    41,    24,    -1,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
+      41,     3,    -1,    -1,     3,    -1,    -1,    -1,    -1,    11,
+      -1,    13,    14,    15,    13,    14,    15,     3,    20,    18,
+      -1,    20,    -1,    -1,    -1,    -1,    -1,    13,    14,    15,
+      -1,    -1,    -1,    -1,    20,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
+      41,    27,    28,    29,    30,    31,    32,    33,    34,    35,
+      36,    37,    38,    39,    40,    41,    28,    29,    30,    31,
+      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
+      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
+      40,    41,    31,    32,    33,    34,    35,    36,    37,    38,
+      39,    40,    41,    33,    34,    35,    36,    37,    38,    39,
+      40,    41
 };
 
 /* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
    state STATE-NUM.  */
 static const yytype_int8 yystos[] =
 {
-       0,    42,    43,     0,    16,    17,    44,    49,     3,     3,
-       3,    11,    12,    13,    18,    19,    47,    50,    53,    55,
-       6,     6,    20,    23,    20,    20,    20,     3,     4,     5,
-      20,    22,    40,    55,    56,     3,    47,    22,    23,    23,
-      21,    54,    56,    56,    56,    56,    56,    56,    56,    22,
-      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
-      34,    35,    36,    37,    38,    39,     6,    56,    56,    21,
-      10,    22,    21,    21,    21,    21,    56,    56,    56,    56,
-      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
-      56,    56,    20,    51,    22,    22,    54,     9,    48,    53,
-      48,    48,     3,    21,    52,     9,    47,    14,    15,     6,
-      21,    16,    45,    46,    47,     0,     8,    48,    48,    10,
-       3,    47,    45,     8,    52,     6,     8,    23,    56,    22
+       0,    44,    45,     0,    18,    19,    46,    51,     3,     3,
+       3,    13,    14,    15,    20,    21,    49,    52,    55,    58,
+       6,     6,    22,    25,    22,    22,    22,     3,     4,     5,
+      22,    24,    42,    56,    58,    59,     3,    49,    24,    25,
+      25,    23,    57,    59,    59,    59,    59,    59,    59,    59,
+      24,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,     6,    59,    59,
+      23,    12,    24,    23,    23,    23,    23,    59,    59,    59,
+      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
+      59,    59,    59,    22,    53,    24,    24,    57,    11,    50,
+      55,    50,    50,     7,     3,    23,    54,    11,    49,    16,
+      17,    59,     6,    23,    18,    47,    48,    49,     0,    10,
+      50,    50,     8,    12,     3,    49,    47,    10,    59,    54,
+       6,    10,    25,    59,    24
 };
 
 /* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
 static const yytype_int8 yyr1[] =
 {
-       0,    41,    42,    43,    43,    44,    44,    45,    45,    46,
-      47,    47,    48,    48,    48,    49,    49,    50,    50,    51,
-      51,    52,    52,    53,    53,    53,    53,    53,    53,    53,
-      53,    53,    54,    54,    55,    55,    56,    56,    56,    56,
-      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
-      56,    56,    56,    56,    56,    56,    56,    56
+       0,    43,    44,    45,    45,    46,    46,    47,    47,    48,
+      49,    49,    50,    50,    50,    51,    51,    52,    52,    53,
+      53,    54,    54,    55,    55,    55,    55,    55,    55,    55,
+      55,    55,    56,    57,    57,    58,    58,    59,    59,    59,
+      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
+      59,    59,    59,    59,    59,    59,    59,    59,    59,    59
 };
 
 /* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
@@ -957,9 +975,9 @@ static const yytype_int8 yyr2[] =
        0,     2,     3,     0,     2,     6,     6,     2,     1,     6,
        1,     2,     3,     1,     3,     0,     2,     8,     7,     3,
        2,     2,     4,     3,     2,     7,     5,     7,     5,     5,
-       4,     2,     3,     1,     3,     4,     1,     1,     3,     3,
+       4,     2,     7,     3,     1,     3,     4,     1,     1,     3,
        3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     2,     3,     3,     1,     1
+       3,     3,     3,     3,     2,     3,     3,     1,     1,     1
 };
 
 
@@ -1693,343 +1711,355 @@ yyreduce:
   switch (yyn)
     {
   case 2: /* program: variables functions stmt  */
-#line 114 "parser.y"
+#line 116 "parser.y"
                                     {p.variables = (yyvsp[-2].vars);  p.functions = (yyvsp[-1].funcs); p.statements=(yyvsp[0].stmt);}
-#line 1699 "y.tab.c"
+#line 1717 "y.tab.c"
     break;
 
   case 3: /* variables: %empty  */
-#line 120 "parser.y"
+#line 122 "parser.y"
                                          {(yyval.vars) = NULL;}
-#line 1705 "y.tab.c"
+#line 1723 "y.tab.c"
     break;
 
   case 4: /* variables: variables variable  */
-#line 121 "parser.y"
+#line 123 "parser.y"
                                         {(yyval.vars) = ListAddLast((yyvsp[0].var), (yyvsp[-1].vars));}
-#line 1711 "y.tab.c"
+#line 1729 "y.tab.c"
     break;
 
   case 5: /* variable: VAR NAME TYPE ASSIGN exp SEMICOLON  */
-#line 124 "parser.y"
+#line 126 "parser.y"
                                                       {(yyval.var) =VarDecNode((yyvsp[-4].name), TyNode((yyvsp[-3].type)),(yyvsp[-1].exp), 0);}
-#line 1717 "y.tab.c"
+#line 1735 "y.tab.c"
     break;
 
   case 6: /* variable: IMPLICIT NAME TYPE ASSIGN exp SEMICOLON  */
-#line 125 "parser.y"
+#line 127 "parser.y"
                                                            {(yyval.var) =VarDecNode((yyvsp[-4].name), TyNode((yyvsp[-3].type)),(yyvsp[-1].exp), 1);}
-#line 1723 "y.tab.c"
+#line 1741 "y.tab.c"
     break;
 
   case 7: /* funcVars: funcVar funcVars  */
-#line 128 "parser.y"
+#line 130 "parser.y"
                                      {(yyval.vars) = ListAddFirst((yyvsp[-1].var), (yyvsp[0].vars));}
-#line 1729 "y.tab.c"
+#line 1747 "y.tab.c"
     break;
 
   case 8: /* funcVars: funcVar  */
-#line 129 "parser.y"
+#line 131 "parser.y"
                                          {(yyval.vars) = ListAddFirst((yyvsp[0].var), NULL);}
-#line 1735 "y.tab.c"
+#line 1753 "y.tab.c"
     break;
 
   case 9: /* funcVar: VAR NAME TYPE ASSIGN exp SEMICOLON  */
-#line 131 "parser.y"
+#line 133 "parser.y"
                                                 {(yyval.var) =VarDecNode((yyvsp[-4].name), TyNode((yyvsp[-3].type)),(yyvsp[-1].exp), 0); }
-#line 1741 "y.tab.c"
+#line 1759 "y.tab.c"
     break;
 
   case 10: /* stmt: statement  */
-#line 137 "parser.y"
+#line 139 "parser.y"
                                  {(yyval.stmt) = ListAddFirst((yyvsp[0].statement), NULL);}
-#line 1747 "y.tab.c"
+#line 1765 "y.tab.c"
     break;
 
   case 11: /* stmt: statement stmt  */
-#line 138 "parser.y"
+#line 140 "parser.y"
                                    {(yyval.stmt) = ListAddFirst((yyvsp[-1].statement), (yyvsp[0].stmt));}
-#line 1753 "y.tab.c"
+#line 1771 "y.tab.c"
     break;
 
   case 12: /* block: STARTBLOCK stmt ENDBLOCK  */
-#line 141 "parser.y"
+#line 143 "parser.y"
                                      {(yyval.stmt) = (yyvsp[-1].stmt);}
-#line 1759 "y.tab.c"
+#line 1777 "y.tab.c"
     break;
 
   case 13: /* block: statement  */
-#line 142 "parser.y"
+#line 144 "parser.y"
                                      {(yyval.stmt) = ListAddFirst((yyvsp[0].statement),NULL);}
-#line 1765 "y.tab.c"
+#line 1783 "y.tab.c"
     break;
 
   case 14: /* block: STARTBLOCK stmt $end  */
-#line 143 "parser.y"
+#line 145 "parser.y"
                                      {(yyval.stmt) = (yyvsp[-1].stmt);}
-#line 1771 "y.tab.c"
+#line 1789 "y.tab.c"
     break;
 
   case 15: /* functions: %empty  */
-#line 145 "parser.y"
+#line 147 "parser.y"
                                        {(yyval.funcs) = NULL;}
-#line 1777 "y.tab.c"
+#line 1795 "y.tab.c"
     break;
 
   case 16: /* functions: functions function  */
-#line 146 "parser.y"
+#line 148 "parser.y"
                                      {(yyval.funcs) =ListAddLast((yyvsp[0].func),(yyvsp[-1].funcs)); }
-#line 1783 "y.tab.c"
+#line 1801 "y.tab.c"
     break;
 
   case 17: /* function: FUN NAME TYPE args STARTBLOCK funcVars stmt ENDBLOCK  */
-#line 149 "parser.y"
+#line 151 "parser.y"
                                                                  {(yyval.func)= FunDecNode((yyvsp[-6].name),TyNode((yyvsp[-5].type)),(yyvsp[-4].args),(yyvsp[-2].vars),(yyvsp[-1].stmt) );}
-#line 1789 "y.tab.c"
+#line 1807 "y.tab.c"
     break;
 
   case 18: /* function: FUN NAME TYPE args STARTBLOCK stmt ENDBLOCK  */
-#line 150 "parser.y"
+#line 152 "parser.y"
                                                                     {(yyval.func)= FunDecNode((yyvsp[-5].name),TyNode((yyvsp[-4].type)),(yyvsp[-3].args),NULL,(yyvsp[-1].stmt) );}
-#line 1795 "y.tab.c"
+#line 1813 "y.tab.c"
     break;
 
   case 19: /* args: OPEN_PARENT param CLOSE_PARENT  */
-#line 153 "parser.y"
+#line 155 "parser.y"
                                                       {(yyval.args) = (yyvsp[-1].param);}
-#line 1801 "y.tab.c"
+#line 1819 "y.tab.c"
     break;
 
   case 20: /* args: OPEN_PARENT CLOSE_PARENT  */
-#line 154 "parser.y"
+#line 156 "parser.y"
                                                   {(yyval.args) = NULL;}
-#line 1807 "y.tab.c"
+#line 1825 "y.tab.c"
     break;
 
   case 21: /* param: NAME TYPE  */
-#line 156 "parser.y"
+#line 158 "parser.y"
                                                     {(yyval.param) = ListAddFirst(Param(TyNode((yyvsp[0].type)),(yyvsp[-1].name)), NULL);}
-#line 1813 "y.tab.c"
+#line 1831 "y.tab.c"
     break;
 
   case 22: /* param: NAME TYPE COMMA param  */
-#line 157 "parser.y"
+#line 159 "parser.y"
                                                                {(yyval.param) = ListAddFirst(Param(TyNode((yyvsp[-2].type)),(yyvsp[-3].name)), (yyvsp[0].param));}
-#line 1819 "y.tab.c"
+#line 1837 "y.tab.c"
     break;
 
   case 23: /* statement: RETURN exp SEMICOLON  */
-#line 162 "parser.y"
+#line 164 "parser.y"
                                                                                          { (yyval.statement) = RetNode((yyvsp[-1].exp));}
-#line 1825 "y.tab.c"
+#line 1843 "y.tab.c"
     break;
 
   case 24: /* statement: RETURN SEMICOLON  */
-#line 163 "parser.y"
+#line 165 "parser.y"
                                                                                {(yyval.statement)= RetNode(voidNode());}
-#line 1831 "y.tab.c"
+#line 1849 "y.tab.c"
     break;
 
   case 25: /* statement: IF OPEN_PARENT exp CLOSE_PARENT block ELSE block  */
-#line 164 "parser.y"
+#line 166 "parser.y"
                                                                                                     {  (yyval.statement)= IfNode((yyvsp[-4].exp),(yyvsp[-2].stmt),(yyvsp[0].stmt));}
-#line 1837 "y.tab.c"
+#line 1855 "y.tab.c"
     break;
 
   case 26: /* statement: IF OPEN_PARENT exp CLOSE_PARENT block  */
-#line 165 "parser.y"
+#line 167 "parser.y"
                                                                                                     {  (yyval.statement)= IfNode((yyvsp[-2].exp),(yyvsp[0].stmt),NULL);}
-#line 1843 "y.tab.c"
+#line 1861 "y.tab.c"
     break;
 
   case 27: /* statement: WHILE OPEN_PARENT exp CLOSE_PARENT block OTHERWISE block  */
-#line 166 "parser.y"
+#line 168 "parser.y"
                                                                                                     {  (yyval.statement)= whileNode((yyvsp[-4].exp),(yyvsp[-2].stmt),(yyvsp[0].stmt));}
-#line 1849 "y.tab.c"
+#line 1867 "y.tab.c"
     break;
 
   case 28: /* statement: WHILE OPEN_PARENT exp CLOSE_PARENT block  */
-#line 167 "parser.y"
+#line 169 "parser.y"
                                                                                                     {  (yyval.statement)= whileNode((yyvsp[-2].exp),(yyvsp[0].stmt),NULL);}
-#line 1855 "y.tab.c"
+#line 1873 "y.tab.c"
     break;
 
   case 29: /* statement: REPEAT OPEN_PARENT exp CLOSE_PARENT block  */
-#line 168 "parser.y"
+#line 170 "parser.y"
                                                                                                     {  (yyval.statement)= repeatNode((yyvsp[-2].exp),(yyvsp[0].stmt));}
-#line 1861 "y.tab.c"
+#line 1879 "y.tab.c"
     break;
 
   case 30: /* statement: NAME ASSIGN exp SEMICOLON  */
-#line 169 "parser.y"
+#line 171 "parser.y"
                                                                                                     {  (yyval.statement)= assignNode((yyvsp[-3].name),(yyvsp[-1].exp));}
-#line 1867 "y.tab.c"
+#line 1885 "y.tab.c"
     break;
 
   case 31: /* statement: funcCall SEMICOLON  */
-#line 170 "parser.y"
+#line 172 "parser.y"
                                                                                 { (yyval.statement) = funcStatementNode((yyvsp[-1].exp));}
-#line 1873 "y.tab.c"
+#line 1891 "y.tab.c"
+    break;
+
+  case 32: /* ternaryEXP: OPEN_PARENT exp CLOSE_PARENT TERNARY exp COLON exp  */
+#line 179 "parser.y"
+                                                                       {(yyval.exp) =  ternaryNode( (yyvsp[-5].exp), (yyvsp[-2].exp), (yyvsp[0].exp));}
+#line 1897 "y.tab.c"
     break;
 
-  case 32: /* funcCallParam: exp COMMA funcCallParam  */
-#line 178 "parser.y"
+  case 33: /* funcCallParam: exp COMMA funcCallParam  */
+#line 181 "parser.y"
                                                                {(yyval.funcCallParam) = ListAddFirst((yyvsp[-2].exp), (yyvsp[0].funcCallParam));}
-#line 1879 "y.tab.c"
+#line 1903 "y.tab.c"
     break;
 
-  case 33: /* funcCallParam: exp  */
-#line 179 "parser.y"
+  case 34: /* funcCallParam: exp  */
+#line 182 "parser.y"
                                                                  {(yyval.funcCallParam) = ListAddFirst((yyvsp[0].exp), NULL);}
-#line 1885 "y.tab.c"
+#line 1909 "y.tab.c"
     break;
 
-  case 34: /* funcCall: NAME OPEN_PARENT CLOSE_PARENT  */
-#line 181 "parser.y"
+  case 35: /* funcCall: NAME OPEN_PARENT CLOSE_PARENT  */
+#line 184 "parser.y"
                                                      {(yyval.exp)= funcExpNode((yyvsp[-2].name), NULL); }
-#line 1891 "y.tab.c"
+#line 1915 "y.tab.c"
     break;
 
-  case 35: /* funcCall: NAME OPEN_PARENT funcCallParam CLOSE_PARENT  */
-#line 182 "parser.y"
+  case 36: /* funcCall: NAME OPEN_PARENT funcCallParam CLOSE_PARENT  */
+#line 185 "parser.y"
                                                                      {(yyval.exp)= funcExpNode((yyvsp[-3].name), (yyvsp[-1].funcCallParam)); }
-#line 1897 "y.tab.c"
+#line 1921 "y.tab.c"
     break;
 
-  case 36: /* exp: INT  */
-#line 185 "parser.y"
+  case 37: /* exp: INT  */
+#line 188 "parser.y"
                                { (yyval.exp) = IntNode((yyvsp[0].ival)); }
-#line 1903 "y.tab.c"
+#line 1927 "y.tab.c"
     break;
 
-  case 37: /* exp: STRING  */
-#line 186 "parser.y"
+  case 38: /* exp: STRING  */
+#line 189 "parser.y"
                                 { (yyval.exp)  = strConstNode((yyvsp[0].str)); }
-#line 1909 "y.tab.c"
+#line 1933 "y.tab.c"
     break;
 
-  case 38: /* exp: OPEN_PARENT exp CLOSE_PARENT  */
-#line 187 "parser.y"
+  case 39: /* exp: OPEN_PARENT exp CLOSE_PARENT  */
+#line 190 "parser.y"
                                     { (yyval.exp)= (yyvsp[-1].exp);}
-#line 1915 "y.tab.c"
+#line 1939 "y.tab.c"
     break;
 
-  case 39: /* exp: exp PLUS exp  */
-#line 188 "parser.y"
+  case 40: /* exp: exp PLUS exp  */
+#line 191 "parser.y"
                                   {(yyval.exp)= BinOpNode(plus_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1921 "y.tab.c"
+#line 1945 "y.tab.c"
     break;
 
-  case 40: /* exp: exp MINUS exp  */
-#line 189 "parser.y"
+  case 41: /* exp: exp MINUS exp  */
+#line 192 "parser.y"
                                    { (yyval.exp)= BinOpNode(minus_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1927 "y.tab.c"
+#line 1951 "y.tab.c"
     break;
 
-  case 41: /* exp: exp MUL exp  */
-#line 190 "parser.y"
+  case 42: /* exp: exp MUL exp  */
+#line 193 "parser.y"
                                  {  (yyval.exp)= BinOpNode(mul_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1933 "y.tab.c"
+#line 1957 "y.tab.c"
     break;
 
-  case 42: /* exp: exp DIV exp  */
-#line 191 "parser.y"
+  case 43: /* exp: exp DIV exp  */
+#line 194 "parser.y"
                                  {  (yyval.exp)= BinOpNode(div_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1939 "y.tab.c"
+#line 1963 "y.tab.c"
     break;
 
-  case 43: /* exp: exp REM exp  */
-#line 192 "parser.y"
+  case 44: /* exp: exp REM exp  */
+#line 195 "parser.y"
                                  {  (yyval.exp)= BinOpNode(rem_op, (yyvsp[-2].exp), (yyvsp[0].exp));}
-#line 1945 "y.tab.c"
+#line 1969 "y.tab.c"
     break;
 
-  case 44: /* exp: exp BOR exp  */
-#line 193 "parser.y"
+  case 45: /* exp: exp BOR exp  */
+#line 196 "parser.y"
                                  {  (yyval.exp)= BinOpNode(bor_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1951 "y.tab.c"
+#line 1975 "y.tab.c"
     break;
 
-  case 45: /* exp: exp BAND exp  */
-#line 194 "parser.y"
+  case 46: /* exp: exp BAND exp  */
+#line 197 "parser.y"
                                   { (yyval.exp)= BinOpNode(band_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1957 "y.tab.c"
+#line 1981 "y.tab.c"
     break;
 
-  case 46: /* exp: exp XOR exp  */
-#line 195 "parser.y"
+  case 47: /* exp: exp XOR exp  */
+#line 198 "parser.y"
                                  {  (yyval.exp)= BinOpNode(xor_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1963 "y.tab.c"
+#line 1987 "y.tab.c"
     break;
 
-  case 47: /* exp: exp LT exp  */
-#line 196 "parser.y"
+  case 48: /* exp: exp LT exp  */
+#line 199 "parser.y"
                                 {   (yyval.exp)= BinOpNode(lt_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1969 "y.tab.c"
+#line 1993 "y.tab.c"
     break;
 
-  case 48: /* exp: exp LE exp  */
-#line 197 "parser.y"
+  case 49: /* exp: exp LE exp  */
+#line 200 "parser.y"
                                 {   (yyval.exp)= BinOpNode(le_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 1975 "y.tab.c"
+#line 1999 "y.tab.c"
     break;
 
-  case 49: /* exp: exp GT exp  */
-#line 198 "parser.y"
+  case 50: /* exp: exp GT exp  */
+#line 201 "parser.y"
                                 {   (yyval.exp)= BinOpNode(gt_op, (yyvsp[-2].exp), (yyvsp[0].exp));}
-#line 1981 "y.tab.c"
+#line 2005 "y.tab.c"
     break;
 
-  case 50: /* exp: exp GE exp  */
-#line 199 "parser.y"
+  case 51: /* exp: exp GE exp  */
+#line 202 "parser.y"
                                 {   (yyval.exp)= BinOpNode(ge_op, (yyvsp[-2].exp), (yyvsp[0].exp));}
-#line 1987 "y.tab.c"
+#line 2011 "y.tab.c"
     break;
 
-  case 51: /* exp: exp OR exp  */
-#line 200 "parser.y"
+  case 52: /* exp: exp OR exp  */
+#line 203 "parser.y"
                                 {   (yyval.exp)= BinOpNode(or_op, (yyvsp[-2].exp), (yyvsp[0].exp));}
-#line 1993 "y.tab.c"
+#line 2017 "y.tab.c"
     break;
 
-  case 52: /* exp: exp AND exp  */
-#line 201 "parser.y"
+  case 53: /* exp: exp AND exp  */
+#line 204 "parser.y"
                                  {  (yyval.exp)= BinOpNode(and_op, (yyvsp[-2].exp), (yyvsp[0].exp));}
-#line 1999 "y.tab.c"
+#line 2023 "y.tab.c"
     break;
 
-  case 53: /* exp: NOT exp  */
-#line 202 "parser.y"
+  case 54: /* exp: NOT exp  */
+#line 205 "parser.y"
                                  { (yyval.exp) = UnOpNode(not_op, (yyvsp[0].exp)); }
-#line 2005 "y.tab.c"
+#line 2029 "y.tab.c"
     break;
 
-  case 54: /* exp: exp EQ exp  */
-#line 203 "parser.y"
+  case 55: /* exp: exp EQ exp  */
+#line 206 "parser.y"
                                   { (yyval.exp)= BinOpNode(eq_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 2011 "y.tab.c"
+#line 2035 "y.tab.c"
     break;
 
-  case 55: /* exp: exp NE exp  */
-#line 204 "parser.y"
+  case 56: /* exp: exp NE exp  */
+#line 207 "parser.y"
                                   { (yyval.exp)= BinOpNode(ne_op, (yyvsp[-2].exp), (yyvsp[0].exp)); }
-#line 2017 "y.tab.c"
+#line 2041 "y.tab.c"
     break;
 
-  case 56: /* exp: NAME  */
-#line 205 "parser.y"
+  case 57: /* exp: NAME  */
+#line 208 "parser.y"
                                       { (yyval.exp) = varNode((yyvsp[0].name)); }
-#line 2023 "y.tab.c"
+#line 2047 "y.tab.c"
     break;
 
-  case 57: /* exp: funcCall  */
-#line 206 "parser.y"
+  case 58: /* exp: funcCall  */
+#line 209 "parser.y"
                                       {(yyval.exp) = (yyvsp[0].exp);}
-#line 2029 "y.tab.c"
+#line 2053 "y.tab.c"
+    break;
+
+  case 59: /* exp: ternaryEXP  */
+#line 210 "parser.y"
+                              {(yyval.exp) =   (yyvsp[0].exp);}
+#line 2059 "y.tab.c"
     break;
 
 
-#line 2033 "y.tab.c"
+#line 2063 "y.tab.c"
 
       default: break;
     }
@@ -2253,5 +2283,5 @@ yyreturnlab:
   return yyresult;
 }
 
-#line 207 "parser.y"
+#line 211 "parser.y"
 
diff --git a/y.tab.h b/y.tab.h
index ebac315..18afaf5 100644
--- a/y.tab.h
+++ b/y.tab.h
@@ -58,40 +58,42 @@ extern int yydebug;
     INT = 259,                     /* INT  */
     STRING = 260,                  /* STRING  */
     TYPE = 261,                    /* TYPE  */
-    INBLOCK = 262,                 /* INBLOCK  */
-    ENDBLOCK = 263,                /* ENDBLOCK  */
-    STARTBLOCK = 264,              /* STARTBLOCK  */
-    COMMA = 265,                   /* COMMA  */
-    IF = 266,                      /* IF  */
-    WHILE = 267,                   /* WHILE  */
-    REPEAT = 268,                  /* REPEAT  */
-    ELSE = 269,                    /* ELSE  */
-    OTHERWISE = 270,               /* OTHERWISE  */
-    VAR = 271,                     /* VAR  */
-    IMPLICIT = 272,                /* IMPLICIT  */
-    RETURN = 273,                  /* RETURN  */
-    FUN = 274,                     /* FUN  */
-    OPEN_PARENT = 275,             /* OPEN_PARENT  */
-    CLOSE_PARENT = 276,            /* CLOSE_PARENT  */
-    SEMICOLON = 277,               /* SEMICOLON  */
-    ASSIGN = 278,                  /* ASSIGN  */
-    OR = 279,                      /* OR  */
-    AND = 280,                     /* AND  */
-    BOR = 281,                     /* BOR  */
-    XOR = 282,                     /* XOR  */
-    BAND = 283,                    /* BAND  */
-    EQ = 284,                      /* EQ  */
-    NE = 285,                      /* NE  */
-    LT = 286,                      /* LT  */
-    LE = 287,                      /* LE  */
-    GT = 288,                      /* GT  */
-    GE = 289,                      /* GE  */
-    PLUS = 290,                    /* PLUS  */
-    MINUS = 291,                   /* MINUS  */
-    MUL = 292,                     /* MUL  */
-    DIV = 293,                     /* DIV  */
-    REM = 294,                     /* REM  */
-    NOT = 295                      /* NOT  */
+    TERNARY = 262,                 /* TERNARY  */
+    COLON = 263,                   /* COLON  */
+    INBLOCK = 264,                 /* INBLOCK  */
+    ENDBLOCK = 265,                /* ENDBLOCK  */
+    STARTBLOCK = 266,              /* STARTBLOCK  */
+    COMMA = 267,                   /* COMMA  */
+    IF = 268,                      /* IF  */
+    WHILE = 269,                   /* WHILE  */
+    REPEAT = 270,                  /* REPEAT  */
+    ELSE = 271,                    /* ELSE  */
+    OTHERWISE = 272,               /* OTHERWISE  */
+    VAR = 273,                     /* VAR  */
+    IMPLICIT = 274,                /* IMPLICIT  */
+    RETURN = 275,                  /* RETURN  */
+    FUN = 276,                     /* FUN  */
+    OPEN_PARENT = 277,             /* OPEN_PARENT  */
+    CLOSE_PARENT = 278,            /* CLOSE_PARENT  */
+    SEMICOLON = 279,               /* SEMICOLON  */
+    ASSIGN = 280,                  /* ASSIGN  */
+    OR = 281,                      /* OR  */
+    AND = 282,                     /* AND  */
+    BOR = 283,                     /* BOR  */
+    XOR = 284,                     /* XOR  */
+    BAND = 285,                    /* BAND  */
+    EQ = 286,                      /* EQ  */
+    NE = 287,                      /* NE  */
+    LT = 288,                      /* LT  */
+    LE = 289,                      /* LE  */
+    GT = 290,                      /* GT  */
+    GE = 291,                      /* GE  */
+    PLUS = 292,                    /* PLUS  */
+    MINUS = 293,                   /* MINUS  */
+    MUL = 294,                     /* MUL  */
+    DIV = 295,                     /* DIV  */
+    REM = 296,                     /* REM  */
+    NOT = 297                      /* NOT  */
   };
   typedef enum yytokentype yytoken_kind_t;
 #endif
@@ -104,40 +106,42 @@ extern int yydebug;
 #define INT 259
 #define STRING 260
 #define TYPE 261
-#define INBLOCK 262
-#define ENDBLOCK 263
-#define STARTBLOCK 264
-#define COMMA 265
-#define IF 266
-#define WHILE 267
-#define REPEAT 268
-#define ELSE 269
-#define OTHERWISE 270
-#define VAR 271
-#define IMPLICIT 272
-#define RETURN 273
-#define FUN 274
-#define OPEN_PARENT 275
-#define CLOSE_PARENT 276
-#define SEMICOLON 277
-#define ASSIGN 278
-#define OR 279
-#define AND 280
-#define BOR 281
-#define XOR 282
-#define BAND 283
-#define EQ 284
-#define NE 285
-#define LT 286
-#define LE 287
-#define GT 288
-#define GE 289
-#define PLUS 290
-#define MINUS 291
-#define MUL 292
-#define DIV 293
-#define REM 294
-#define NOT 295
+#define TERNARY 262
+#define COLON 263
+#define INBLOCK 264
+#define ENDBLOCK 265
+#define STARTBLOCK 266
+#define COMMA 267
+#define IF 268
+#define WHILE 269
+#define REPEAT 270
+#define ELSE 271
+#define OTHERWISE 272
+#define VAR 273
+#define IMPLICIT 274
+#define RETURN 275
+#define FUN 276
+#define OPEN_PARENT 277
+#define CLOSE_PARENT 278
+#define SEMICOLON 279
+#define ASSIGN 280
+#define OR 281
+#define AND 282
+#define BOR 283
+#define XOR 284
+#define BAND 285
+#define EQ 286
+#define NE 287
+#define LT 288
+#define LE 289
+#define GT 290
+#define GE 291
+#define PLUS 292
+#define MINUS 293
+#define MUL 294
+#define DIV 295
+#define REM 296
+#define NOT 297
 
 /* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
@@ -164,7 +168,7 @@ union YYSTYPE
     list * param;
 	
 
-#line 168 "y.tab.h"
+#line 172 "y.tab.h"
 
 };
 typedef union YYSTYPE YYSTYPE;
diff --git a/y.tab.o b/y.tab.o
index cf4e11b..8ba95f7 100644
Binary files a/y.tab.o and b/y.tab.o differ
